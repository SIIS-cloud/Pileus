#! /bin/bash
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/bash}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by libvirt $as_me 1.2.12, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" run Makefile src/Makefile include/Makefile docs/Makefile docs/schemas/Makefile gnulib/lib/Makefile gnulib/tests/Makefile libvirt.pc libvirt-qemu.pc libvirt-lxc.pc src/libvirt.pc src/libvirt-qemu.pc src/libvirt-lxc.pc libvirt.spec mingw-libvirt.spec po/Makefile.in include/libvirt/Makefile include/libvirt/libvirt.h daemon/Makefile tools/Makefile tests/Makefile examples/apparmor/Makefile examples/object-events/Makefile examples/domsuspend/Makefile examples/dominfo/Makefile examples/dommigrate/Makefile examples/domtop/Makefile examples/openauth/Makefile examples/hellolibvirt/Makefile examples/systemtap/Makefile examples/xml/nwfilter/Makefile examples/lxcconvert/Makefile tools/wireshark/Makefile tools/wireshark/src/Makefile"
config_headers=" config.h"
config_links=" GNUmakefile:GNUmakefile"
config_commands=" depfiles libtool po-directories"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration links:
$config_links

Configuration commands:
$config_commands

Report bugs to <libvir-list@redhat.com>.
libvirt home page: <http://libvirt.org>."

ac_cs_config="'--prefix=/usr' '--sysconfdir=/etc' '--localstatedir=/var' '--libdir=/usr/lib'"
ac_cs_version="\
libvirt config.status 1.2.12
configured by ./configure, generated by GNU Autoconf 2.69,
  with options \"$ac_cs_config\"

Copyright (C) 2012 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/root/libvirt/libvirt-1.2.12'
srcdir='.'
INSTALL='/usr/bin/install -c'
MKDIR_P='/bin/mkdir -p'
AWK='gawk'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    $as_echo "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    $as_echo "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    $as_echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X /bin/bash './configure'  '--prefix=/usr' '--sysconfdir=/etc' '--localstatedir=/var' '--libdir=/usr/lib' $ac_configure_extra_args --no-create --no-recursion
  shift
  $as_echo "running CONFIG_SHELL=/bin/bash $*" >&6
  CONFIG_SHELL='/bin/bash'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  $as_echo "$ac_log"
} >&5

#
# INIT-COMMANDS
#
AMDEP_TRUE="" ac_aux_dir="build-aux"
GNUmakefile=GNUmakefile


# The HP-UX ksh and POSIX shell print the target directory to stdout
# if CDPATH is set.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

sed_quote_subst='s/\(["`$\\]\)/\\\1/g'
double_quote_subst='s/\(["`\\]\)/\\\1/g'
delay_variable_subst='s/\\\\\\\\\\\$/\\\\\\$/g'
AS='as'
DLLTOOL='dlltool'
OBJDUMP='objdump'
macro_version='2.4.2'
macro_revision='1.3337'
enable_shared='yes'
enable_static='no'
pic_mode='default'
enable_fast_install='yes'
SHELL='/bin/bash'
ECHO='printf %s\n'
PATH_SEPARATOR=':'
host_alias=''
host='x86_64-unknown-linux-gnu'
host_os='linux-gnu'
build_alias=''
build='x86_64-unknown-linux-gnu'
build_os='linux-gnu'
SED='/bin/sed'
Xsed='/bin/sed -e 1s/^X//'
GREP='/bin/grep'
EGREP='/bin/grep -E'
FGREP='/bin/grep -F'
LD='/usr/bin/ld'
NM='/usr/bin/nm -B'
LN_S='ln -s'
max_cmd_len='1572864'
ac_objext='o'
exeext=''
lt_unset='unset'
lt_SP2NL='tr \040 \012'
lt_NL2SP='tr \015\012 \040\040'
lt_cv_to_host_file_cmd='func_convert_file_noop'
lt_cv_to_tool_file_cmd='func_convert_file_noop'
reload_flag=' -r'
reload_cmds='$LD$reload_flag -o $output$reload_objs'
deplibs_check_method='pass_all'
file_magic_cmd='$MAGIC_CMD'
file_magic_glob=''
want_nocaseglob='no'
sharedlib_from_linklib_cmd='printf %s\n'
AR='ar'
AR_FLAGS='cru'
archiver_list_spec='@'
STRIP='strip'
RANLIB='ranlib'
old_postinstall_cmds='chmod 644 $oldlib~$RANLIB $tool_oldlib'
old_postuninstall_cmds=''
old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
lock_old_archive_extraction='no'
CC='gcc -std=gnu99'
CFLAGS='-g -O2'
compiler='gcc -std=gnu99'
GCC='yes'
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'' | sed '\''/ __gnu_lto/d'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"\2", (void *) \&\2},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \(lib[^ ]*\)$/  {"\2", (void *) \&\2},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"lib\2", (void *) \&\2},/p'\'''
nm_file_list_spec='@'
lt_sysroot=''
objdir='.libs'
MAGIC_CMD='file'
lt_prog_compiler_no_builtin_flag=' -fno-builtin'
lt_prog_compiler_pic=' -fPIC -DPIC'
lt_prog_compiler_wl='-Wl,'
lt_prog_compiler_static='-static'
lt_cv_prog_compiler_c_o='yes'
need_locks='no'
MANIFEST_TOOL=':'
DSYMUTIL=''
NMEDIT=''
LIPO=''
OTOOL=''
OTOOL64=''
libext='a'
shrext_cmds='.so'
extract_expsyms_cmds=''
archive_cmds_need_lc='no'
enable_shared_with_static_runtimes='no'
export_dynamic_flag_spec='${wl}--export-dynamic'
whole_archive_flag_spec='${wl}--whole-archive$convenience ${wl}--no-whole-archive'
compiler_needs_object='no'
old_archive_from_new_cmds=''
old_archive_from_expsyms_cmds=''
archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
	    cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
	    echo "local: *; };" >> $output_objdir/$libname.ver~
	    $CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
module_cmds=''
module_expsym_cmds=''
with_gnu_ld='yes'
allow_undefined_flag=''
no_undefined_flag=''
hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
hardcode_libdir_separator=''
hardcode_direct='no'
hardcode_direct_absolute='no'
hardcode_minus_L='no'
hardcode_shlibpath_var='unsupported'
hardcode_automatic='no'
inherit_rpath='no'
link_all_deplibs='no'
always_export_symbols='no'
export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
exclude_expsyms='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
include_expsyms=''
prelink_cmds=''
postlink_cmds=''
file_list_spec=''
variables_saved_for_relink='PATH LD_LIBRARY_PATH LD_RUN_PATH GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH'
need_lib_prefix='no'
need_version='no'
version_type='linux'
runpath_var='LD_RUN_PATH'
shlibpath_var='LD_LIBRARY_PATH'
shlibpath_overrides_runpath='no'
libname_spec='lib$name'
library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
soname_spec='${libname}${release}${shared_ext}$major'
install_override_mode=''
postinstall_cmds=''
postuninstall_cmds=''
finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
finish_eval=''
hardcode_into_libs='yes'
sys_lib_search_path_spec='/usr/lib/gcc/x86_64-linux-gnu/4.8 /usr/lib/x86_64-linux-gnu /usr/lib /lib/x86_64-linux-gnu /lib '
sys_lib_dlsearch_path_spec='/lib /usr/lib /usr/lib/x86_64-linux-gnu/libfakeroot /usr/local/lib /lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/mesa '
hardcode_action='immediate'
enable_dlopen='unknown'
enable_dlopen_self='unknown'
enable_dlopen_self_static='unknown'
old_striplib='strip --strip-debug'
striplib='strip --strip-unneeded'

LTCC='gcc -std=gnu99'
LTCFLAGS='-g -O2'
compiler='gcc -std=gnu99'

# A function that is used when there is no print builtin or printf.
func_fallback_echo ()
{
  eval 'cat <<_LTECHO_EOF
$1
_LTECHO_EOF'
}

# Quote evaled strings.
for var in AS DLLTOOL OBJDUMP SHELL ECHO PATH_SEPARATOR SED GREP EGREP FGREP LD NM LN_S lt_SP2NL lt_NL2SP reload_flag deplibs_check_method file_magic_cmd file_magic_glob want_nocaseglob sharedlib_from_linklib_cmd AR AR_FLAGS archiver_list_spec STRIP RANLIB CC CFLAGS compiler lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl lt_cv_sys_global_symbol_to_c_name_address lt_cv_sys_global_symbol_to_c_name_address_lib_prefix nm_file_list_spec lt_prog_compiler_no_builtin_flag lt_prog_compiler_pic lt_prog_compiler_wl lt_prog_compiler_static lt_cv_prog_compiler_c_o need_locks MANIFEST_TOOL DSYMUTIL NMEDIT LIPO OTOOL OTOOL64 shrext_cmds export_dynamic_flag_spec whole_archive_flag_spec compiler_needs_object with_gnu_ld allow_undefined_flag no_undefined_flag hardcode_libdir_flag_spec hardcode_libdir_separator exclude_expsyms include_expsyms file_list_spec variables_saved_for_relink libname_spec library_names_spec soname_spec install_override_mode finish_eval old_striplib striplib; do
    case `eval \\$ECHO \\""\\$$var"\\"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"\$$var\" | \$SED \"\$sed_quote_subst\"\`\\\""
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

# Double-quote double-evaled strings.
for var in reload_cmds old_postinstall_cmds old_postuninstall_cmds old_archive_cmds extract_expsyms_cmds old_archive_from_new_cmds old_archive_from_expsyms_cmds archive_cmds archive_expsym_cmds module_cmds module_expsym_cmds export_symbols_cmds prelink_cmds postlink_cmds postinstall_cmds postuninstall_cmds finish_cmds sys_lib_search_path_spec sys_lib_dlsearch_path_spec; do
    case `eval \\$ECHO \\""\\$$var"\\"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"\$$var\" | \$SED -e \"\$double_quote_subst\" -e \"\$sed_quote_subst\" -e \"\$delay_variable_subst\"\`\\\""
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

ac_aux_dir='build-aux'
xsi_shell='yes'
lt_shell_append='yes'

# See if we are running on zsh, and set the options which allow our
# commands through without removal of \ escapes INIT.
if test -n "${ZSH_VERSION+set}" ; then
   setopt NO_GLOB_SUBST
fi


    PACKAGE='libvirt'
    VERSION='1.2.12'
    TIMESTAMP=''
    RM='rm -f'
    ofile='libtool'



# Capture the value of obsolete ALL_LINGUAS because we need it to compute
    # POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES, CATALOGS. But hide it
    # from automake < 1.5.
    eval 'OBSOLETE_ALL_LINGUAS''="af
am
ar
as
be
bg
bn
bn_IN
bo
bs
ca
cs
cy
da
de
el
en_GB
es
et
eu_ES
fa
fi
fr
gl
gu
he
hi
hr
hu
hy
id
is
it
ja
ka
kn
ko
ku
lo
lt
lv
mk
ml
mr
ms
my
nb
nl
nn
nso
or
pa
pl
pt
pt_BR
ro
ru
si
sk
sl
sq
sr
sr@latin
sv
ta
te
th
tr
uk
ur
vi
vi_VN
zh_CN
zh_TW
zu"'
    # Capture the value of LINGUAS because we need it to compute CATALOGS.
    LINGUAS="%UNSET%"



# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "config.h") CONFIG_HEADERS="$CONFIG_HEADERS config.h" ;;
    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
    "$GNUmakefile") CONFIG_LINKS="$CONFIG_LINKS $GNUmakefile:$GNUmakefile" ;;
    "libtool") CONFIG_COMMANDS="$CONFIG_COMMANDS libtool" ;;
    "po-directories") CONFIG_COMMANDS="$CONFIG_COMMANDS po-directories" ;;
    "run") CONFIG_FILES="$CONFIG_FILES run" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "src/Makefile") CONFIG_FILES="$CONFIG_FILES src/Makefile" ;;
    "include/Makefile") CONFIG_FILES="$CONFIG_FILES include/Makefile" ;;
    "docs/Makefile") CONFIG_FILES="$CONFIG_FILES docs/Makefile" ;;
    "docs/schemas/Makefile") CONFIG_FILES="$CONFIG_FILES docs/schemas/Makefile" ;;
    "gnulib/lib/Makefile") CONFIG_FILES="$CONFIG_FILES gnulib/lib/Makefile" ;;
    "gnulib/tests/Makefile") CONFIG_FILES="$CONFIG_FILES gnulib/tests/Makefile" ;;
    "libvirt.pc") CONFIG_FILES="$CONFIG_FILES libvirt.pc" ;;
    "libvirt-qemu.pc") CONFIG_FILES="$CONFIG_FILES libvirt-qemu.pc" ;;
    "libvirt-lxc.pc") CONFIG_FILES="$CONFIG_FILES libvirt-lxc.pc" ;;
    "src/libvirt.pc") CONFIG_FILES="$CONFIG_FILES src/libvirt.pc" ;;
    "src/libvirt-qemu.pc") CONFIG_FILES="$CONFIG_FILES src/libvirt-qemu.pc" ;;
    "src/libvirt-lxc.pc") CONFIG_FILES="$CONFIG_FILES src/libvirt-lxc.pc" ;;
    "libvirt.spec") CONFIG_FILES="$CONFIG_FILES libvirt.spec" ;;
    "mingw-libvirt.spec") CONFIG_FILES="$CONFIG_FILES mingw-libvirt.spec" ;;
    "po/Makefile.in") CONFIG_FILES="$CONFIG_FILES po/Makefile.in" ;;
    "include/libvirt/Makefile") CONFIG_FILES="$CONFIG_FILES include/libvirt/Makefile" ;;
    "include/libvirt/libvirt.h") CONFIG_FILES="$CONFIG_FILES include/libvirt/libvirt.h" ;;
    "daemon/Makefile") CONFIG_FILES="$CONFIG_FILES daemon/Makefile" ;;
    "tools/Makefile") CONFIG_FILES="$CONFIG_FILES tools/Makefile" ;;
    "tests/Makefile") CONFIG_FILES="$CONFIG_FILES tests/Makefile" ;;
    "examples/apparmor/Makefile") CONFIG_FILES="$CONFIG_FILES examples/apparmor/Makefile" ;;
    "examples/object-events/Makefile") CONFIG_FILES="$CONFIG_FILES examples/object-events/Makefile" ;;
    "examples/domsuspend/Makefile") CONFIG_FILES="$CONFIG_FILES examples/domsuspend/Makefile" ;;
    "examples/dominfo/Makefile") CONFIG_FILES="$CONFIG_FILES examples/dominfo/Makefile" ;;
    "examples/dommigrate/Makefile") CONFIG_FILES="$CONFIG_FILES examples/dommigrate/Makefile" ;;
    "examples/domtop/Makefile") CONFIG_FILES="$CONFIG_FILES examples/domtop/Makefile" ;;
    "examples/openauth/Makefile") CONFIG_FILES="$CONFIG_FILES examples/openauth/Makefile" ;;
    "examples/hellolibvirt/Makefile") CONFIG_FILES="$CONFIG_FILES examples/hellolibvirt/Makefile" ;;
    "examples/systemtap/Makefile") CONFIG_FILES="$CONFIG_FILES examples/systemtap/Makefile" ;;
    "examples/xml/nwfilter/Makefile") CONFIG_FILES="$CONFIG_FILES examples/xml/nwfilter/Makefile" ;;
    "examples/lxcconvert/Makefile") CONFIG_FILES="$CONFIG_FILES examples/lxcconvert/Makefile" ;;
    "tools/wireshark/Makefile") CONFIG_FILES="$CONFIG_FILES tools/wireshark/Makefile" ;;
    "tools/wireshark/src/Makefile") CONFIG_FILES="$CONFIG_FILES tools/wireshark/src/Makefile" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_LINKS+set}" = set || CONFIG_LINKS=$config_links
  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
S["gltests_LTLIBOBJS"]=" isnanl.lo nanosleep.lo"
S["gltests_LIBOBJS"]=" isnanl.o nanosleep.o"
S["gl_LTLIBOBJS"]=" asnprintf.lo fclose.lo fcntl.lo fflush.lo fpurge.lo fseek.lo fseeko.lo ioctl.lo mbrtowc.lo mktime.lo printf-args.lo printf-parse.lo strerror_r.lo v"\
"asnprintf.lo"
S["gl_LIBOBJS"]=" asnprintf.o fclose.o fcntl.o fflush.o fpurge.o fseek.o fseeko.o ioctl.o mbrtowc.o mktime.o printf-args.o printf-parse.o strerror_r.o vasnprintf.o"
S["CONFIG_INCLUDE"]="config.h"
S["am__EXEEXT_FALSE"]=""
S["am__EXEEXT_TRUE"]="#"
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["IFCONFIG_PATH"]=""
S["ws_plugindir"]=""
S["WITH_WIRESHARK_DISSECTOR_FALSE"]=""
S["WITH_WIRESHARK_DISSECTOR_TRUE"]="#"
S["WS_DISSECTOR_CPPFLAGS"]=""
S["WIRESHARK"]=""
S["GLIB_LIBS"]=""
S["GLIB_CFLAGS"]=""
S["HAVE_LIBNL_FALSE"]="#"
S["HAVE_LIBNL_TRUE"]=""
S["LIBNL_ROUTE3_LIBS"]=""
S["LIBNL_ROUTE3_CFLAGS"]=""
S["LIBNL_LIBS"]="-lnl  "
S["LIBNL_CFLAGS"]=" "
S["WITH_VIRTUALPORT_FALSE"]="#"
S["WITH_VIRTUALPORT_TRUE"]=""
S["WITH_MACVTAP_FALSE"]="#"
S["WITH_MACVTAP_TRUE"]=""
S["WITH_INTERFACE_FALSE"]="#"
S["WITH_INTERFACE_TRUE"]=""
S["WITH_NWFILTER_FALSE"]="#"
S["WITH_NWFILTER_TRUE"]=""
S["WITH_NODE_DEVICES_FALSE"]="#"
S["WITH_NODE_DEVICES_TRUE"]=""
S["LV_LIBTOOL_OBJDIR"]=".libs"
S["DRIVER_MODULE_LIBS"]="-ldl"
S["DRIVER_MODULE_LDFLAGS"]="-export-dynamic"
S["WITH_DRIVER_MODULES_FALSE"]="#"
S["WITH_DRIVER_MODULES_TRUE"]=""
S["WITH_WIN_ICON_FALSE"]=""
S["WITH_WIN_ICON_TRUE"]="#"
S["WINDRES"]=""
S["MSCOM_LIBS"]=""
S["VERSION_SCRIPT_FLAGS"]="-Wl,--version-script="
S["LIBVIRT_QEMU_SYMBOL_FILE"]="$(srcdir)/libvirt_qemu.syms"
S["LIBVIRT_LXC_SYMBOL_FILE"]="$(srcdir)/libvirt_lxc.syms"
S["LIBVIRT_SYMBOL_FILE"]="libvirt.syms"
S["WIN32_EXTRA_CFLAGS"]=""
S["MINGW_EXTRA_LDFLAGS"]=""
S["CYGWIN_EXTRA_LIBADD"]=""
S["CYGWIN_EXTRA_LDFLAGS"]=""
S["GETTEXT_CPPFLAGS"]=""
S["POSUB"]="po"
S["INTLLIBS"]=""
S["LTLIBICONV"]="-liconv"
S["LIBICONV"]="-liconv"
S["XGETTEXT_EXTRA_OPTIONS"]=" --flag=asprintf:2:c-format --flag=vasprintf:2:c-format --flag=error:3:c-format --flag=error_at_line:5:c-format"
S["MSGMERGE"]="/usr/bin/msgmerge"
S["XGETTEXT_015"]="/usr/bin/xgettext"
S["XGETTEXT"]="/usr/bin/xgettext"
S["GMSGFMT_015"]="/usr/bin/msgfmt"
S["MSGFMT_015"]="/usr/bin/msgfmt"
S["GMSGFMT"]="/usr/bin/msgfmt"
S["MSGFMT"]="/usr/bin/msgfmt"
S["GETTEXT_MACRO_VERSION"]="0.17"
S["USE_NLS"]="yes"
S["WITH_CIL_FALSE"]=""
S["WITH_CIL_TRUE"]="#"
S["LOCK_CHECKING_CFLAGS"]=""
S["COVERAGE_LDFLAGS"]=""
S["COVERAGE_CFLAGS"]=""
S["WITH_EXPENSIVE_TESTS_FALSE"]=""
S["WITH_EXPENSIVE_TESTS_TRUE"]="#"
S["VIR_TEST_EXPENSIVE_DEFAULT"]="0"
S["WITH_TESTS_FALSE"]="#"
S["WITH_TESTS_TRUE"]=""
S["PERL"]="/usr/bin/perl"
S["PYTHON"]="/usr/bin/python2"
S["WITH_HYPERV_FALSE"]=""
S["WITH_HYPERV_TRUE"]="#"
S["WITH_XENAPI_FALSE"]=""
S["WITH_XENAPI_TRUE"]="#"
S["WITH_VMX_FALSE"]="#"
S["WITH_VMX_TRUE"]=""
S["WITH_ESX_FALSE"]="#"
S["WITH_ESX_TRUE"]=""
S["WITH_STORAGE_FALSE"]="#"
S["WITH_STORAGE_TRUE"]=""
S["DEVMAPPER_LIBS"]="-ldevmapper  "
S["DEVMAPPER_CFLAGS"]=" "
S["WITH_STORAGE_DISK_FALSE"]=""
S["WITH_STORAGE_DISK_TRUE"]="#"
S["LIBPARTED_LIBS"]="-luuid -lparted"
S["LIBPARTED_CFLAGS"]=""
S["DMSETUP"]="/sbin/dmsetup"
S["PARTED"]="/sbin/parted"
S["GLUSTER_CLI"]=""
S["WITH_STORAGE_ZFS_FALSE"]=""
S["WITH_STORAGE_ZFS_TRUE"]="#"
S["ZPOOL"]=""
S["ZFS"]=""
S["WITH_STORAGE_GLUSTER_FALSE"]=""
S["WITH_STORAGE_GLUSTER_TRUE"]="#"
S["WITH_STORAGE_SHEEPDOG_FALSE"]=""
S["WITH_STORAGE_SHEEPDOG_TRUE"]="#"
S["COLLIE"]=""
S["LIBRBD_LIBS"]=""
S["WITH_STORAGE_RBD_FALSE"]=""
S["WITH_STORAGE_RBD_TRUE"]="#"
S["WITH_STORAGE_MPATH_FALSE"]="#"
S["WITH_STORAGE_MPATH_TRUE"]=""
S["WITH_STORAGE_SCSI_FALSE"]="#"
S["WITH_STORAGE_SCSI_TRUE"]=""
S["WITH_STORAGE_ISCSI_FALSE"]="#"
S["WITH_STORAGE_ISCSI_TRUE"]=""
S["ISCSIADM"]="/usr/bin/iscsiadm"
S["WITH_STORAGE_LVM_FALSE"]=""
S["WITH_STORAGE_LVM_TRUE"]="#"
S["LVS"]=""
S["VGS"]=""
S["PVS"]=""
S["VGSCAN"]=""
S["VGCHANGE"]=""
S["LVCHANGE"]=""
S["LVREMOVE"]=""
S["VGREMOVE"]=""
S["PVREMOVE"]=""
S["LVCREATE"]=""
S["VGCREATE"]=""
S["PVCREATE"]=""
S["SHOWMOUNT"]=""
S["WITH_STORAGE_FS_FALSE"]="#"
S["WITH_STORAGE_FS_TRUE"]=""
S["MKFS"]="/sbin/mkfs"
S["UMOUNT"]="/bin/umount"
S["MOUNT"]="/bin/mount"
S["WITH_STORAGE_DIR_FALSE"]="#"
S["WITH_STORAGE_DIR_TRUE"]=""
S["WITH_SECRETS_FALSE"]="#"
S["WITH_SECRETS_TRUE"]=""
S["WITH_BRIDGE_FALSE"]="#"
S["WITH_BRIDGE_TRUE"]=""
S["WITH_NETWORK_FALSE"]="#"
S["WITH_NETWORK_TRUE"]=""
S["VIRSH_LIBS"]="  -lncurses "
S["WITH_PM_UTILS_FALSE"]="#"
S["WITH_PM_UTILS_TRUE"]=""
S["WITH_PHYP_FALSE"]=""
S["WITH_PHYP_TRUE"]="#"
S["WITH_UML_FALSE"]="#"
S["WITH_UML_TRUE"]=""
S["LIBPCAP_LIBS"]=""
S["LIBPCAP_CFLAGS"]=""
S["HAVE_NUMAD_FALSE"]=""
S["HAVE_NUMAD_TRUE"]="#"
S["NUMAD"]=""
S["WITH_DTRACE_PROBES_FALSE"]=""
S["WITH_DTRACE_PROBES_TRUE"]="#"
S["DTRACE"]=""
S["WITH_APPARMOR_PROFILES_FALSE"]=""
S["WITH_APPARMOR_PROFILES_TRUE"]="#"
S["WITH_SECDRIVER_APPARMOR_FALSE"]=""
S["WITH_SECDRIVER_APPARMOR_TRUE"]="#"
S["WITH_SECDRIVER_SELINUX_FALSE"]="#"
S["WITH_SECDRIVER_SELINUX_TRUE"]=""
S["VIR_CHRDEV_LOCK_FILE_PATH_FALSE"]="#"
S["VIR_CHRDEV_LOCK_FILE_PATH_TRUE"]=""
S["HAVE_FIREWALLD_FALSE"]=""
S["HAVE_FIREWALLD_TRUE"]="#"
S["WITH_POLKIT1_FALSE"]="#"
S["WITH_POLKIT1_TRUE"]=""
S["WITH_POLKIT0_FALSE"]=""
S["WITH_POLKIT0_TRUE"]="#"
S["WITH_POLKIT_FALSE"]="#"
S["WITH_POLKIT_TRUE"]=""
S["POLKIT_AUTH"]=""
S["POLKIT_LIBS"]=""
S["POLKIT_CFLAGS"]=""
S["PKCHECK_PATH"]="/usr/bin/pkcheck"
S["WITH_GNUTLS_FALSE"]="#"
S["WITH_GNUTLS_TRUE"]=""
S["GNUTLS_LIBS"]="-lgnutls   -lgcrypt"
S["GNUTLS_CFLAGS"]="-I/usr/include/p11-kit-1   -DGCRYPT_NO_DEPRECATED"
S["LIBXML_LIBS"]="-lxml2  "
S["LIBXML_CFLAGS"]="-I/usr/include/libxml2  "
S["WITH_BHYVE_FALSE"]=""
S["WITH_BHYVE_TRUE"]="#"
S["BHYVELOAD"]=""
S["BHYVECTL"]=""
S["BHYVE"]=""
S["WITH_PARALLELS_FALSE"]=""
S["WITH_PARALLELS_TRUE"]="#"
S["PARALLELS_SDK_LIBS"]=""
S["PARALLELS_SDK_CFLAGS"]=""
S["WITH_LXC_FALSE"]="#"
S["WITH_LXC_TRUE"]=""
S["WITH_XEN_INOTIFY_FALSE"]="#"
S["WITH_XEN_INOTIFY_TRUE"]=""
S["WITH_XENCONFIG_FALSE"]="#"
S["WITH_XENCONFIG_TRUE"]=""
S["XEN_LIBS"]=" -lxenstore"
S["XEN_CFLAGS"]=""
S["WITH_XEN_FALSE"]="#"
S["WITH_XEN_TRUE"]=""
S["LIBXL_LIBS"]=" -lxenlight -lxenctrl -lxlutil"
S["LIBXL_CFLAGS"]=""
S["WITH_LIBXL_FALSE"]="#"
S["WITH_LIBXL_TRUE"]=""
S["LIBXENSERVER_LIBS"]=""
S["LIBXENSERVER_CFLAGS"]=""
S["WITH_LIBVIRTD_FALSE"]="#"
S["WITH_LIBVIRTD_TRUE"]=""
S["WITH_REMOTE_FALSE"]="#"
S["WITH_REMOTE_TRUE"]=""
S["WITH_TEST_FALSE"]="#"
S["WITH_TEST_TRUE"]=""
S["WITH_QEMU_FALSE"]="#"
S["WITH_QEMU_TRUE"]=""
S["WITH_VBOX_FALSE"]="#"
S["WITH_VBOX_TRUE"]=""
S["DLOPEN_LIBS"]="-ldl"
S["XDR_CFLAGS"]=""
S["WITH_VMWARE_FALSE"]="#"
S["WITH_VMWARE_TRUE"]=""
S["WITH_OPENVZ_FALSE"]="#"
S["WITH_OPENVZ_TRUE"]=""
S["EBTABLES_PATH"]="/sbin/ebtables"
S["IP6TABLES_PATH"]="/sbin/ip6tables"
S["IPTABLES_PATH"]="/sbin/iptables"
S["IP_PATH"]="/sbin/ip"
S["WITH_SYSCTL_FALSE"]="#"
S["WITH_SYSCTL_TRUE"]=""
S["LIBVIRT_INIT_SCRIPT_SYSTEMD_FALSE"]=""
S["LIBVIRT_INIT_SCRIPT_SYSTEMD_TRUE"]="#"
S["LIBVIRT_INIT_SCRIPT_UPSTART_FALSE"]=""
S["LIBVIRT_INIT_SCRIPT_UPSTART_TRUE"]="#"
S["LIBVIRT_INIT_SCRIPT_RED_HAT_FALSE"]=""
S["LIBVIRT_INIT_SCRIPT_RED_HAT_TRUE"]="#"
S["ENABLE_DEBUG_FALSE"]="#"
S["ENABLE_DEBUG_TRUE"]=""
S["STATIC_BINARIES"]=""
S["XML_CATALOG_FILE"]="/etc/xml/catalog"
S["HTML_DIR"]="$(datadir)/doc/$(PACKAGE)-$(VERSION)/html"
S["ADDR2LINE"]="/usr/bin/addr2line"
S["SCRUB"]="scrub"
S["OVSVSCTL"]="/usr/bin/ovs-vsctl"
S["RMMOD"]="/sbin/rmmod"
S["MODPROBE"]="/sbin/modprobe"
S["UDEVSETTLE"]=""
S["UDEVADM"]="/sbin/udevadm"
S["TC"]="/sbin/tc"
S["RADVD"]="radvd"
S["DNSMASQ"]="/usr/sbin/dnsmasq"
S["DMIDECODE"]="/usr/sbin/dmidecode"
S["AUGPARSE"]="/usr/bin/augparse"
S["XSLTPROC"]="/usr/bin/xsltproc"
S["XMLCATALOG"]="/usr/bin/xmlcatalog"
S["XMLLINT"]="/usr/bin/xmllint"
S["HAVE_GLIBC_RPCGEN_FALSE"]="#"
S["HAVE_GLIBC_RPCGEN_TRUE"]=""
S["HAVE_RPCGEN_FALSE"]="#"
S["HAVE_RPCGEN_TRUE"]=""
S["RPCGEN"]="/usr/bin/rpcgen"
S["HAVE_LIBTASN1_FALSE"]="#"
S["HAVE_LIBTASN1_TRUE"]=""
S["WITH_ATOMIC_OPS_PTHREAD_FALSE"]=""
S["WITH_ATOMIC_OPS_PTHREAD_TRUE"]="#"
S["YAJL_LIBS"]="-lyajl"
S["YAJL_CFLAGS"]=""
S["WITH_YAJL2_FALSE"]="#"
S["WITH_YAJL2_TRUE"]=""
S["WITH_YAJL_FALSE"]="#"
S["WITH_YAJL_TRUE"]=""
S["QEMU"]="/usr/bin/qemu-system-x86_64"
S["WITH_UDEV_FALSE"]="#"
S["WITH_UDEV_TRUE"]=""
S["UDEV_LIBS"]="-ludev  "
S["UDEV_CFLAGS"]=" "
S["WITH_SYSTEMD_DAEMON_FALSE"]=""
S["WITH_SYSTEMD_DAEMON_TRUE"]="#"
S["SYSTEMD_DAEMON_LIBS"]=""
S["SYSTEMD_DAEMON_CFLAGS"]=""
S["WITH_SSH2_FALSE"]=""
S["WITH_SSH2_TRUE"]="#"
S["SSH2_LIBS"]=""
S["SSH2_CFLAGS"]=""
S["SELINUX_LIBS"]="-lselinux"
S["SELINUX_CFLAGS"]=""
S["WITH_SELINUX_FALSE"]="#"
S["WITH_SELINUX_TRUE"]=""
S["SASL_LIBS"]=""
S["SASL_CFLAGS"]=""
S["WITH_SASL1_FALSE"]=""
S["WITH_SASL1_TRUE"]="#"
S["WITH_SASL_FALSE"]=""
S["WITH_SASL_TRUE"]="#"
S["SANLOCK_LIBS"]=""
S["SANLOCK_CFLAGS"]=""
S["WITH_SANLOCK_FALSE"]=""
S["WITH_SANLOCK_TRUE"]="#"
S["READLINE_LIBS"]=" -lncurses "
S["READLINE_CFLAGS"]=""
S["WITH_READLINE_FALSE"]=""
S["WITH_READLINE_TRUE"]="#"
S["WITH_PCIACCESS_FALSE"]="#"
S["WITH_PCIACCESS_TRUE"]=""
S["PCIACCESS_LIBS"]="-lpciaccess  "
S["PCIACCESS_CFLAGS"]=" "
S["WITH_OPENWSMAN_FALSE"]=""
S["WITH_OPENWSMAN_TRUE"]="#"
S["OPENWSMAN_LIBS"]=""
S["OPENWSMAN_CFLAGS"]=""
S["NUMACTL_LIBS"]=""
S["NUMACTL_CFLAGS"]=""
S["WITH_NUMACTL_FALSE"]=""
S["WITH_NUMACTL_TRUE"]="#"
S["WITH_NETCF_FALSE"]=""
S["WITH_NETCF_TRUE"]="#"
S["NETCF_LIBS"]=""
S["NETCF_CFLAGS"]=""
S["WITH_HAL_FALSE"]=""
S["WITH_HAL_TRUE"]="#"
S["HAL_LIBS"]=""
S["HAL_CFLAGS"]=""
S["WITH_GLUSTERFS_FALSE"]=""
S["WITH_GLUSTERFS_TRUE"]="#"
S["GLUSTERFS_LIBS"]=""
S["GLUSTERFS_CFLAGS"]=""
S["WITH_FUSE_FALSE"]=""
S["WITH_FUSE_TRUE"]="#"
S["FUSE_LIBS"]=""
S["FUSE_CFLAGS"]=""
S["WITH_DBUS_FALSE"]=""
S["WITH_DBUS_TRUE"]="#"
S["DBUS_LIBS"]=""
S["DBUS_CFLAGS"]=""
S["WITH_CURL_FALSE"]="#"
S["WITH_CURL_TRUE"]=""
S["CURL_LIBS"]="-lcurl  "
S["CURL_CFLAGS"]="-DCURL_DISABLE_TYPECHECK  "
S["CAPNG_LIBS"]=""
S["CAPNG_CFLAGS"]=""
S["WITH_CAPNG_FALSE"]=""
S["WITH_CAPNG_TRUE"]="#"
S["WITH_BLKID_FALSE"]=""
S["WITH_BLKID_TRUE"]="#"
S["BLKID_LIBS"]=""
S["BLKID_CFLAGS"]=""
S["WITH_AVAHI_FALSE"]=""
S["WITH_AVAHI_TRUE"]="#"
S["AVAHI_LIBS"]=""
S["AVAHI_CFLAGS"]=""
S["PKG_CONFIG_LIBDIR"]=""
S["PKG_CONFIG_PATH"]=""
S["PKG_CONFIG"]="/usr/bin/pkg-config"
S["AUDIT_LIBS"]=""
S["AUDIT_CFLAGS"]=""
S["WITH_AUDIT_FALSE"]=""
S["WITH_AUDIT_TRUE"]="#"
S["ATTR_LIBS"]=""
S["ATTR_CFLAGS"]=""
S["WITH_ATTR_FALSE"]=""
S["WITH_ATTR_TRUE"]="#"
S["APPARMOR_LIBS"]=""
S["APPARMOR_CFLAGS"]=""
S["WITH_APPARMOR_FALSE"]=""
S["WITH_APPARMOR_TRUE"]="#"
S["NO_INDIRECT_LDFLAGS"]="-Wl,--no-copy-dt-needed-entries"
S["RELRO_LDFLAGS"]="-Wl,-z -Wl,relro -Wl,-z -Wl,now"
S["PIE_LDFLAGS"]="-pie"
S["PIE_CFLAGS"]="-fPIE -DPIE"
S["WARN_CFLAGS"]=" -W -Waddress -Waggressive-loop-optimizations -Wall -Warray-bounds -Wattributes -Wbad-function-cast -Wbuiltin-macro-redefined -Wcast-align -Wchar-su"\
"bscripts -Wclobbered -Wcomment -Wcomments -Wcoverage-mismatch -Wcpp -Wdeprecated-declarations -Wdisabled-optimization -Wdiv-by-zero -Wdouble-promoti"\
"on -Wempty-body -Wendif-labels -Wextra -Wformat-contains-nul -Wformat-extra-args -Wformat-security -Wformat-y2k -Wformat-zero-length -Wfree-nonheap-"\
"object -Wignored-qualifiers -Wimplicit -Wimplicit-function-declaration -Wimplicit-int -Winit-self -Winline -Wint-to-pointer-cast -Winvalid-memory-mo"\
"del -Winvalid-pch -Wjump-misses-init -Wlogical-op -Wmain -Wmaybe-uninitialized -Wmissing-braces -Wmissing-declarations -Wmissing-field-initializers "\
"-Wmissing-include-dirs -Wmissing-parameter-type -Wmissing-prototypes -Wmultichar -Wnarrowing -Wnested-externs -Wnonnull -Wold-style-declaration -Wol"\
"d-style-definition -Woverflow -Woverride-init -Wpacked-bitfield-compat -Wparentheses -Wpointer-arith -Wpointer-sign -Wpointer-to-int-cast -Wpragmas "\
"-Wreturn-local-addr -Wreturn-type -Wsequence-point -Wshadow -Wsizeof-pointer-memaccess -Wstrict-aliasing -Wstrict-prototypes -Wsuggest-attribute=con"\
"st -Wsuggest-attribute=format -Wsuggest-attribute=noreturn -Wsuggest-attribute=pure -Wswitch -Wsync-nand -Wtrampolines -Wtrigraphs -Wtype-limits -Wu"\
"ninitialized -Wunknown-pragmas -Wunused -Wunused-but-set-parameter -Wunused-but-set-variable -Wunused-function -Wunused-label -Wunused-local-typedef"\
"s -Wunused-parameter -Wunused-result -Wunused-value -Wunused-variable -Wvarargs -Wvariadic-macros -Wvector-operation-performance -Wvolatile-register"\
"-var -Wwrite-strings -Wnormalized=nfc -Wno-sign-compare -Wjump-misses-init -Wno-format-nonliteral -Wframe-larger-than=4096 -fexceptions -fasynchrono"\
"us-unwind-tables -fipa-pure-const -Wno-suggest-attribute=pure -Wno-suggest-attribute=const -Werror -fstack-protector-all"
S["WITH_FREEBSD_FALSE"]=""
S["WITH_FREEBSD_TRUE"]="#"
S["WITH_LINUX_FALSE"]="#"
S["WITH_LINUX_TRUE"]=""
S["LIBVIRT_NODELETE"]="-Wl,-z -Wl,nodelete"
S["OTOOL64"]=""
S["OTOOL"]=""
S["LIPO"]=""
S["NMEDIT"]=""
S["DSYMUTIL"]=""
S["MANIFEST_TOOL"]=":"
S["ac_ct_AR"]="ar"
S["LN_S"]="ln -s"
S["NM"]="/usr/bin/nm -B"
S["ac_ct_DUMPBIN"]=""
S["DUMPBIN"]=""
S["LD"]="/usr/bin/ld"
S["FGREP"]="/bin/grep -F"
S["LIBTOOL"]="$(SHELL) $(top_builddir)/libtool"
S["OBJDUMP"]="objdump"
S["DLLTOOL"]="dlltool"
S["AS"]="as"
S["LIBTESTS_LIBDEPS"]=""
S["abs_aux_dir"]="/root/libvirt/libvirt-1.2.12/build-aux"
S["HAVE_SPAWN_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_SPAWN_H"]="<spawn.h>"
S["NEXT_SPAWN_H"]="<spawn.h>"
S["POSIX_SPAWN_PORTED_FALSE"]="#"
S["POSIX_SPAWN_PORTED_TRUE"]=""
S["LIB_POSIX_SPAWN"]=""
S["REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN"]="0"
S["REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2"]="0"
S["REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE"]="0"
S["REPLACE_POSIX_SPAWN"]="0"
S["HAVE_POSIX_SPAWN_FILE_ACTIONS_T"]="1"
S["HAVE_POSIX_SPAWNATTR_T"]="1"
S["HAVE_POSIX_SPAWN"]="1"
S["GNULIB_POSIX_SPAWNATTR_DESTROY"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_POSIX_SPAWNATTR_SETSIGMASK"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_POSIX_SPAWNATTR_GETSIGMASK"]="0"
S["GNULIB_POSIX_SPAWNATTR_SETSIGDEFAULT"]="0"
S["GNULIB_POSIX_SPAWNATTR_GETSIGDEFAULT"]="0"
S["GNULIB_POSIX_SPAWNATTR_SETSCHEDPOLICY"]="0"
S["GNULIB_POSIX_SPAWNATTR_GETSCHEDPOLICY"]="0"
S["GNULIB_POSIX_SPAWNATTR_SETSCHEDPARAM"]="0"
S["GNULIB_POSIX_SPAWNATTR_GETSCHEDPARAM"]="0"
S["GNULIB_POSIX_SPAWNATTR_SETPGROUP"]="0"
S["GNULIB_POSIX_SPAWNATTR_GETPGROUP"]="0"
S["GNULIB_POSIX_SPAWNATTR_SETFLAGS"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_POSIX_SPAWNATTR_GETFLAGS"]="0"
S["GNULIB_POSIX_SPAWNATTR_INIT"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_POSIX_SPAWN_FILE_ACTIONS_DESTROY"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_POSIX_SPAWN_FILE_ACTIONS_INIT"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_POSIX_SPAWNP"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_POSIX_SPAWN"]="0"
S["NET_IF_LIB"]=""
S["LIB_NANOSLEEP"]=""
S["NEXT_AS_FIRST_DIRECTIVE_MATH_H"]="<math.h>"
S["NEXT_MATH_H"]="<math.h>"
S["REPLACE_TRUNCL"]="0"
S["REPLACE_TRUNCF"]="0"
S["REPLACE_TRUNC"]="0"
S["REPLACE_SQRTL"]="0"
S["REPLACE_SIGNBIT_USING_GCC"]="1"
S["REPLACE_SIGNBIT"]="0"
S["REPLACE_ROUNDL"]="0"
S["REPLACE_ROUNDF"]="0"
S["REPLACE_ROUND"]="0"
S["REPLACE_REMAINDERL"]="0"
S["REPLACE_REMAINDERF"]="0"
S["REPLACE_REMAINDER"]="0"
S["REPLACE_NAN"]="0"
S["REPLACE_MODFL"]="0"
S["REPLACE_MODFF"]="0"
S["REPLACE_MODF"]="0"
S["REPLACE_LOGBL"]="0"
S["REPLACE_LOGBF"]="0"
S["REPLACE_LOGB"]="0"
S["REPLACE_LOG2L"]="0"
S["REPLACE_LOG2F"]="0"
S["REPLACE_LOG2"]="0"
S["REPLACE_LOG1PL"]="0"
S["REPLACE_LOG1PF"]="0"
S["REPLACE_LOG1P"]="0"
S["REPLACE_LOG10L"]="0"
S["REPLACE_LOG10F"]="0"
S["REPLACE_LOG10"]="0"
S["REPLACE_LOGL"]="0"
S["REPLACE_LOGF"]="0"
S["REPLACE_LOG"]="0"
S["REPLACE_LDEXPL"]="0"
S["REPLACE_ISNAN"]="0"
S["REPLACE_ISINF"]="0"
S["REPLACE_ISFINITE"]="0"
S["REPLACE_ILOGBF"]="0"
S["REPLACE_ILOGB"]="0"
S["REPLACE_HYPOTL"]="0"
S["REPLACE_HYPOTF"]="0"
S["REPLACE_HYPOT"]="0"
S["REPLACE_HUGE_VAL"]="0"
S["REPLACE_FREXPL"]="0"
S["REPLACE_FREXP"]="0"
S["REPLACE_FREXPF"]="0"
S["REPLACE_FMODL"]="0"
S["REPLACE_FMODF"]="0"
S["REPLACE_FMOD"]="0"
S["REPLACE_FMAL"]="0"
S["REPLACE_FMAF"]="0"
S["REPLACE_FMA"]="0"
S["REPLACE_FLOORL"]="0"
S["REPLACE_FLOORF"]="0"
S["REPLACE_FLOOR"]="0"
S["REPLACE_FABSL"]="0"
S["REPLACE_EXP2L"]="0"
S["REPLACE_EXP2"]="0"
S["REPLACE_EXPM1F"]="0"
S["REPLACE_EXPM1"]="0"
S["REPLACE_CEILL"]="0"
S["REPLACE_CEILF"]="0"
S["REPLACE_CEIL"]="0"
S["REPLACE_CBRTL"]="0"
S["REPLACE_CBRTF"]="0"
S["HAVE_DECL_TRUNCL"]="1"
S["HAVE_DECL_TRUNCF"]="1"
S["HAVE_DECL_TRUNC"]="1"
S["HAVE_DECL_TANL"]="1"
S["HAVE_DECL_SQRTL"]="1"
S["HAVE_DECL_SINL"]="1"
S["HAVE_DECL_ROUNDL"]="1"
S["HAVE_DECL_ROUNDF"]="1"
S["HAVE_DECL_ROUND"]="1"
S["HAVE_DECL_RINTF"]="1"
S["HAVE_DECL_REMAINDERL"]="1"
S["HAVE_DECL_REMAINDER"]="1"
S["HAVE_DECL_LOGB"]="1"
S["HAVE_DECL_LOG2L"]="1"
S["HAVE_DECL_LOG2F"]="1"
S["HAVE_DECL_LOG2"]="1"
S["HAVE_DECL_LOG10L"]="1"
S["HAVE_DECL_LOGL"]="1"
S["HAVE_DECL_LDEXPL"]="1"
S["HAVE_DECL_FREXPL"]="1"
S["HAVE_DECL_FLOORL"]="1"
S["HAVE_DECL_FLOORF"]="1"
S["HAVE_DECL_EXPM1L"]="1"
S["HAVE_DECL_EXP2L"]="1"
S["HAVE_DECL_EXP2F"]="1"
S["HAVE_DECL_EXP2"]="1"
S["HAVE_DECL_EXPL"]="1"
S["HAVE_DECL_COSL"]="1"
S["HAVE_DECL_COPYSIGNF"]="1"
S["HAVE_DECL_CEILL"]="1"
S["HAVE_DECL_CEILF"]="1"
S["HAVE_DECL_CBRTL"]="1"
S["HAVE_DECL_CBRTF"]="1"
S["HAVE_DECL_ATANL"]="1"
S["HAVE_DECL_ASINL"]="1"
S["HAVE_DECL_ACOSL"]="1"
S["HAVE_TANHF"]="1"
S["HAVE_TANL"]="1"
S["HAVE_TANF"]="1"
S["HAVE_SQRTL"]="1"
S["HAVE_SQRTF"]="1"
S["HAVE_SINHF"]="1"
S["HAVE_SINL"]="1"
S["HAVE_SINF"]="1"
S["HAVE_RINTL"]="1"
S["HAVE_RINT"]="1"
S["HAVE_REMAINDERF"]="1"
S["HAVE_REMAINDER"]="1"
S["HAVE_POWF"]="1"
S["HAVE_MODFL"]="1"
S["HAVE_MODFF"]="1"
S["HAVE_LOGBL"]="1"
S["HAVE_LOGBF"]="1"
S["HAVE_LOG1PL"]="1"
S["HAVE_LOG1PF"]="1"
S["HAVE_LOG1P"]="1"
S["HAVE_LOG10L"]="1"
S["HAVE_LOG10F"]="1"
S["HAVE_LOGL"]="1"
S["HAVE_LOGF"]="1"
S["HAVE_LDEXPF"]="1"
S["HAVE_ISNANL"]="1"
S["HAVE_ISNAND"]="1"
S["HAVE_ISNANF"]="1"
S["HAVE_ILOGBL"]="1"
S["HAVE_ILOGBF"]="1"
S["HAVE_ILOGB"]="1"
S["HAVE_HYPOTL"]="1"
S["HAVE_HYPOTF"]="1"
S["HAVE_FREXPF"]="1"
S["HAVE_FMODL"]="1"
S["HAVE_FMODF"]="1"
S["HAVE_FMAL"]="1"
S["HAVE_FMAF"]="1"
S["HAVE_FMA"]="1"
S["HAVE_FABSL"]="1"
S["HAVE_FABSF"]="1"
S["HAVE_EXPM1F"]="1"
S["HAVE_EXPM1"]="1"
S["HAVE_EXPL"]="1"
S["HAVE_EXPF"]="1"
S["HAVE_COSHF"]="1"
S["HAVE_COSL"]="1"
S["HAVE_COSF"]="1"
S["HAVE_COPYSIGNL"]="1"
S["HAVE_COPYSIGN"]="1"
S["HAVE_CBRTL"]="1"
S["HAVE_CBRTF"]="1"
S["HAVE_CBRT"]="1"
S["HAVE_ATAN2F"]="1"
S["HAVE_ATANL"]="1"
S["HAVE_ATANF"]="1"
S["HAVE_ASINL"]="1"
S["HAVE_ASINF"]="1"
S["HAVE_ACOSL"]="1"
S["HAVE_ACOSF"]="1"
S["GNULIB_TRUNCL"]="0"
S["GNULIB_TRUNCF"]="0"
S["GNULIB_TRUNC"]="0"
S["GNULIB_TANHF"]="0"
S["GNULIB_TANL"]="0"
S["GNULIB_TANF"]="0"
S["GNULIB_SQRTL"]="0"
S["GNULIB_SQRTF"]="0"
S["GNULIB_SINHF"]="0"
S["GNULIB_SINL"]="0"
S["GNULIB_SINF"]="0"
S["GNULIB_SIGNBIT"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_ROUNDL"]="0"
S["GNULIB_ROUNDF"]="0"
S["GNULIB_ROUND"]="0"
S["GNULIB_RINTL"]="0"
S["GNULIB_RINTF"]="0"
S["GNULIB_RINT"]="0"
S["GNULIB_REMAINDERL"]="0"
S["GNULIB_REMAINDERF"]="0"
S["GNULIB_REMAINDER"]="0"
S["GNULIB_POWF"]="0"
S["GNULIB_MODFL"]="0"
S["GNULIB_MODFF"]="0"
S["GNULIB_MODF"]="0"
S["GNULIB_LOGBL"]="0"
S["GNULIB_LOGBF"]="0"
S["GNULIB_LOGB"]="0"
S["GNULIB_LOG2L"]="0"
S["GNULIB_LOG2F"]="0"
S["GNULIB_LOG2"]="0"
S["GNULIB_LOG1PL"]="0"
S["GNULIB_LOG1PF"]="0"
S["GNULIB_LOG1P"]="0"
S["GNULIB_LOG10L"]="0"
S["GNULIB_LOG10F"]="0"
S["GNULIB_LOG10"]="0"
S["GNULIB_LOGL"]="0"
S["GNULIB_LOGF"]="0"
S["GNULIB_LOG"]="0"
S["GNULIB_LDEXPL"]="0"
S["GNULIB_LDEXPF"]="0"
S["GNULIB_ISNANL"]="0"
S["GNULIB_ISNAND"]="0"
S["GNULIB_ISNANF"]="0"
S["GNULIB_ISNAN"]="0"
S["GNULIB_ISINF"]="0"
S["GNULIB_ISFINITE"]="0"
S["GNULIB_ILOGBL"]="0"
S["GNULIB_ILOGBF"]="0"
S["GNULIB_ILOGB"]="0"
S["GNULIB_HYPOTL"]="0"
S["GNULIB_HYPOTF"]="0"
S["GNULIB_HYPOT"]="0"
S["GNULIB_FREXPL"]="0"
S["GNULIB_FREXP"]="0"
S["GNULIB_FREXPF"]="0"
S["GNULIB_FMODL"]="0"
S["GNULIB_FMODF"]="0"
S["GNULIB_FMOD"]="0"
S["GNULIB_FMAL"]="0"
S["GNULIB_FMAF"]="0"
S["GNULIB_FMA"]="0"
S["GNULIB_FLOORL"]="0"
S["GNULIB_FLOORF"]="0"
S["GNULIB_FLOOR"]="0"
S["GNULIB_FABSL"]="0"
S["GNULIB_FABSF"]="0"
S["GNULIB_EXPM1L"]="0"
S["GNULIB_EXPM1F"]="0"
S["GNULIB_EXPM1"]="0"
S["GNULIB_EXP2L"]="0"
S["GNULIB_EXP2F"]="0"
S["GNULIB_EXP2"]="0"
S["GNULIB_EXPL"]="0"
S["GNULIB_EXPF"]="0"
S["GNULIB_COSHF"]="0"
S["GNULIB_COSL"]="0"
S["GNULIB_COSF"]="0"
S["GNULIB_COPYSIGNL"]="0"
S["GNULIB_COPYSIGNF"]="0"
S["GNULIB_COPYSIGN"]="0"
S["GNULIB_CEILL"]="0"
S["GNULIB_CEILF"]="0"
S["GNULIB_CEIL"]="0"
S["GNULIB_CBRTL"]="0"
S["GNULIB_CBRTF"]="0"
S["GNULIB_CBRT"]="0"
S["GNULIB_ATAN2F"]="0"
S["GNULIB_ATANL"]="0"
S["GNULIB_ATANF"]="0"
S["GNULIB_ASINL"]="0"
S["GNULIB_ASINF"]="0"
S["GNULIB_ACOSL"]="0"
S["GNULIB_ACOSF"]="0"
S["INTL_MACOSX_LIBS"]=""
S["HAVE_SAME_LONG_DOUBLE_AS_DOUBLE"]="0"
S["NEXT_AS_FIRST_DIRECTIVE_INTTYPES_H"]="<inttypes.h>"
S["NEXT_INTTYPES_H"]="<inttypes.h>"
S["UINT64_MAX_EQ_ULONG_MAX"]="1"
S["UINT32_MAX_LT_UINTMAX_MAX"]="1"
S["PRIPTR_PREFIX"]="\"l\""
S["PRI_MACROS_BROKEN"]="0"
S["INT64_MAX_EQ_LONG_MAX"]="1"
S["INT32_MAX_LT_INTMAX_MAX"]="1"
S["REPLACE_STRTOUMAX"]="0"
S["REPLACE_STRTOIMAX"]="0"
S["HAVE_DECL_STRTOUMAX"]="1"
S["HAVE_DECL_STRTOIMAX"]="1"
S["HAVE_DECL_IMAXDIV"]="1"
S["HAVE_DECL_IMAXABS"]="1"
S["GNULIB_STRTOUMAX"]="0"
S["GNULIB_STRTOIMAX"]="0"
S["GNULIB_IMAXDIV"]="0"
S["GNULIB_IMAXABS"]="0"
S["LOCALE_TR_UTF8"]="none"
S["gltests_WITNESS"]="IN_LIBVIRT_GNULIB_TESTS"
S["REPLACE_TOWLOWER"]="0"
S["REPLACE_ISWCNTRL"]="0"
S["HAVE_WCTYPE_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_WCTYPE_H"]="<wctype.h>"
S["NEXT_WCTYPE_H"]="<wctype.h>"
S["HAVE_ISWCNTRL"]="1"
S["REPLACE_ISWBLANK"]="0"
S["HAVE_WCTRANS_T"]="1"
S["HAVE_WCTYPE_T"]="1"
S["HAVE_ISWBLANK"]="1"
S["GNULIB_TOWCTRANS"]="0"
S["GNULIB_WCTRANS"]="0"
S["GNULIB_ISWCTYPE"]="0"
S["GNULIB_WCTYPE"]="0"
S["GNULIB_ISWBLANK"]="0"
S["HAVE_WINT_T"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_WCHAR_H"]="<wchar.h>"
S["NEXT_WCHAR_H"]="<wchar.h>"
S["HAVE_UNISTD_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_UNISTD_H"]="<unistd.h>"
S["NEXT_UNISTD_H"]="<unistd.h>"
S["PTHREAD_H_DEFINES_STRUCT_TIMESPEC"]="0"
S["SYS_TIME_H_DEFINES_STRUCT_TIMESPEC"]="0"
S["TIME_H_DEFINES_STRUCT_TIMESPEC"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_TIME_H"]="<time.h>"
S["NEXT_TIME_H"]="<time.h>"
S["NEXT_AS_FIRST_DIRECTIVE_TERMIOS_H"]="<termios.h>"
S["NEXT_TERMIOS_H"]="<termios.h>"
S["HAVE_TERMIOS_H"]="1"
S["HAVE_DECL_TCGETSID"]="1"
S["GNULIB_TCGETSID"]="0"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_WAIT_H"]="<sys/wait.h>"
S["NEXT_SYS_WAIT_H"]="<sys/wait.h>"
S["GNULIB_WAITPID"]="1"
S["HAVE_SYS_UTSNAME_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_UTSNAME_H"]="<sys/utsname.h>"
S["NEXT_SYS_UTSNAME_H"]="<sys/utsname.h>"
S["HAVE_STRUCT_UTSNAME"]="1"
S["HAVE_UNAME"]="1"
S["GNULIB_UNAME"]="1"
S["HAVE_SYS_UIO_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_UIO_H"]="<sys/uio.h>"
S["NEXT_SYS_UIO_H"]="<sys/uio.h>"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_IOCTL_H"]="<sys/ioctl.h>"
S["NEXT_SYS_IOCTL_H"]="<sys/ioctl.h>"
S["HAVE_SYS_IOCTL_H"]="1"
S["HAVE_STRINGS_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_STRINGS_H"]="<strings.h>"
S["NEXT_STRINGS_H"]="<strings.h>"
S["NEXT_AS_FIRST_DIRECTIVE_STRING_H"]="<string.h>"
S["NEXT_STRING_H"]="<string.h>"
S["NEXT_AS_FIRST_DIRECTIVE_STDLIB_H"]="<stdlib.h>"
S["NEXT_STDLIB_H"]="<stdlib.h>"
S["NEXT_AS_FIRST_DIRECTIVE_STDIO_H"]="<stdio.h>"
S["NEXT_STDIO_H"]="<stdio.h>"
S["GL_GENERATE_STDINT_H_FALSE"]=""
S["GL_GENERATE_STDINT_H_TRUE"]="#"
S["STDINT_H"]=""
S["WINT_T_SUFFIX"]=""
S["WCHAR_T_SUFFIX"]=""
S["SIG_ATOMIC_T_SUFFIX"]=""
S["SIZE_T_SUFFIX"]=""
S["PTRDIFF_T_SUFFIX"]=""
S["HAVE_SIGNED_WINT_T"]=""
S["HAVE_SIGNED_WCHAR_T"]=""
S["HAVE_SIGNED_SIG_ATOMIC_T"]=""
S["BITSIZEOF_WINT_T"]=""
S["BITSIZEOF_WCHAR_T"]=""
S["BITSIZEOF_SIG_ATOMIC_T"]=""
S["BITSIZEOF_SIZE_T"]=""
S["BITSIZEOF_PTRDIFF_T"]=""
S["HAVE_SYS_BITYPES_H"]=""
S["HAVE_SYS_INTTYPES_H"]=""
S["HAVE_STDINT_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_STDINT_H"]="<stdint.h>"
S["NEXT_STDINT_H"]="<stdint.h>"
S["HAVE_SYS_TYPES_H"]="1"
S["HAVE_INTTYPES_H"]="1"
S["HAVE_WCHAR_H"]="1"
S["HAVE_UNSIGNED_LONG_LONG_INT"]="1"
S["HAVE_LONG_LONG_INT"]="1"
S["HAVE__BOOL"]="1"
S["GL_GENERATE_STDBOOL_H_FALSE"]=""
S["GL_GENERATE_STDBOOL_H_TRUE"]="#"
S["STDBOOL_H"]=""
S["GL_GENERATE_STDARG_H_FALSE"]=""
S["GL_GENERATE_STDARG_H_TRUE"]="#"
S["STDARG_H"]=""
S["NEXT_AS_FIRST_DIRECTIVE_STDARG_H"]=""
S["NEXT_STDARG_H"]="<stdarg.h>"
S["GL_GENERATE_STDALIGN_H_FALSE"]=""
S["GL_GENERATE_STDALIGN_H_TRUE"]="#"
S["STDALIGN_H"]=""
S["NEXT_AS_FIRST_DIRECTIVE_SIGNAL_H"]="<signal.h>"
S["NEXT_SIGNAL_H"]="<signal.h>"
S["LIB_SELECT"]=""
S["HAVE_SYS_SELECT_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_SELECT_H"]="<sys/select.h>"
S["NEXT_SYS_SELECT_H"]="<sys/select.h>"
S["REPLACE_SELECT"]="0"
S["REPLACE_PSELECT"]="0"
S["HAVE_PSELECT"]="1"
S["GNULIB_SELECT"]="1"
S["GNULIB_PSELECT"]="0"
S["GL_GENERATE_SCHED_H_FALSE"]=""
S["GL_GENERATE_SCHED_H_TRUE"]="#"
S["SCHED_H"]=""
S["HAVE_STRUCT_SCHED_PARAM"]=""
S["HAVE_SCHED_H"]=""
S["NEXT_AS_FIRST_DIRECTIVE_SCHED_H"]=""
S["NEXT_SCHED_H"]=""
S["LIB_PTHREAD_SIGMASK"]="-pthread"
S["REPLACE_RAISE"]="0"
S["REPLACE_PTHREAD_SIGMASK"]="0"
S["HAVE_SIGHANDLER_T"]="1"
S["HAVE_TYPE_VOLATILE_SIG_ATOMIC_T"]="1"
S["HAVE_STRUCT_SIGACTION_SA_SIGACTION"]="1"
S["HAVE_SIGACTION"]="1"
S["HAVE_SIGINFO_T"]="1"
S["HAVE_SIGSET_T"]="1"
S["HAVE_RAISE"]="1"
S["HAVE_PTHREAD_SIGMASK"]="1"
S["HAVE_POSIX_SIGNALBLOCKING"]="1"
S["GNULIB_SIGACTION"]="1"
S["GNULIB_SIGPROCMASK"]="1"
S["GNULIB_SIGNAL_H_SIGPIPE"]="1"
S["GNULIB_RAISE"]="1"
S["GNULIB_PTHREAD_SIGMASK"]="1"
S["LIB_PTHREAD"]="-pthread"
S["GL_GENERATE_PTHREAD_H_FALSE"]=""
S["GL_GENERATE_PTHREAD_H_TRUE"]="#"
S["PTHREAD_H"]=""
S["NEXT_AS_FIRST_DIRECTIVE_PTHREAD_H"]="<pthread.h>"
S["NEXT_PTHREAD_H"]="<pthread.h>"
S["HAVE_PTHREAD_SPINLOCK_T"]="1"
S["HAVE_PTHREAD_T"]="1"
S["HAVE_PTHREAD_H"]="1"
S["PREFERABLY_POSIX_SHELL"]="/bin/bash"
S["POSIX_SHELL"]="/bin/bash"
S["LIB_POLL"]=""
S["LIBSOCKET"]=""
S["NEXT_AS_FIRST_DIRECTIVE_POLL_H"]="<poll.h>"
S["NEXT_POLL_H"]="<poll.h>"
S["HAVE_POLL_H"]="1"
S["REPLACE_POLL"]="0"
S["HAVE_POLL"]="1"
S["GNULIB_POLL"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_PTY_H"]="<pty.h>"
S["NEXT_PTY_H"]="<pty.h>"
S["HAVE_PTY_H"]="1"
S["REPLACE_OPENPTY"]="0"
S["REPLACE_FORKPTY"]="0"
S["HAVE_OPENPTY"]="1"
S["HAVE_FORKPTY"]="1"
S["HAVE_LIBUTIL_H"]="0"
S["HAVE_UTIL_H"]="0"
S["GNULIB_OPENPTY"]="1"
S["GNULIB_FORKPTY"]="0"
S["PTY_LIB"]="-lutil"
S["ASM_SYMBOL_PREFIX"]="\"\""
S["GL_GENERATE_NETINET_IN_H_FALSE"]=""
S["GL_GENERATE_NETINET_IN_H_TRUE"]="#"
S["NETINET_IN_H"]=""
S["HAVE_NETINET_IN_H"]=""
S["NEXT_AS_FIRST_DIRECTIVE_NETINET_IN_H"]=""
S["NEXT_NETINET_IN_H"]=""
S["GL_GENERATE_NET_IF_H_FALSE"]=""
S["GL_GENERATE_NET_IF_H_TRUE"]="#"
S["NET_IF_H"]=""
S["HAVE_NET_IF_H"]=""
S["NEXT_AS_FIRST_DIRECTIVE_NET_IF_H"]=""
S["NEXT_NET_IF_H"]=""
S["APPLE_UNIVERSAL_BUILD"]="0"
S["REPLACE_LOCALTIME"]="0"
S["REPLACE_GMTIME"]="0"
S["REPLACE_TIMEGM"]="0"
S["REPLACE_NANOSLEEP"]="1"
S["REPLACE_MKTIME"]="1"
S["REPLACE_LOCALTIME_R"]="0"
S["HAVE_TIMEGM"]="1"
S["HAVE_STRPTIME"]="1"
S["HAVE_NANOSLEEP"]="1"
S["HAVE_DECL_LOCALTIME_R"]="1"
S["GNULIB_TIME_R"]="1"
S["GNULIB_TIMEGM"]="1"
S["GNULIB_STRPTIME"]="1"
S["GNULIB_NANOSLEEP"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_MKTIME"]="1"
S["LOCALE_FR_UTF8"]="none"
S["LOCALE_ZH_CN"]="none"
S["LOCALE_JA"]="none"
S["SED"]="/bin/sed"
S["LTLIBMULTITHREAD"]="-pthread"
S["LIBMULTITHREAD"]="-pthread"
S["LTLIBTHREAD"]=""
S["LIBTHREAD"]=""
S["LIBPTH_PREFIX"]=""
S["LTLIBPTH"]=""
S["LIBPTH"]=""
S["NEXT_AS_FIRST_DIRECTIVE_LOCALE_H"]="<locale.h>"
S["NEXT_LOCALE_H"]="<locale.h>"
S["HAVE_XLOCALE_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_STDDEF_H"]="<stddef.h>"
S["NEXT_STDDEF_H"]="<stddef.h>"
S["GL_GENERATE_STDDEF_H_FALSE"]="#"
S["GL_GENERATE_STDDEF_H_TRUE"]=""
S["STDDEF_H"]="stddef.h"
S["HAVE_WCHAR_T"]="1"
S["HAVE_MAX_ALIGN_T"]="0"
S["REPLACE_NULL"]="0"
S["REPLACE_STRUCT_LCONV"]="0"
S["REPLACE_DUPLOCALE"]="0"
S["REPLACE_SETLOCALE"]="0"
S["REPLACE_LOCALECONV"]="0"
S["HAVE_DUPLOCALE"]="1"
S["GNULIB_DUPLOCALE"]="0"
S["GNULIB_SETLOCALE"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_LOCALECONV"]="1"
S["LOCALCHARSET_TESTS_ENVIRONMENT"]="CHARSETALIASDIR=\"$(abs_top_builddir)/gnulib/lib\""
S["GLIBC21"]="yes"
S["LDEXP_LIBM"]=""
S["HAVE_LANGINFO_YESEXPR"]="1"
S["HAVE_LANGINFO_ERA"]="1"
S["HAVE_LANGINFO_T_FMT_AMPM"]="1"
S["HAVE_LANGINFO_CODESET"]="1"
S["HAVE_LANGINFO_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_LANGINFO_H"]="<langinfo.h>"
S["NEXT_LANGINFO_H"]="<langinfo.h>"
S["REPLACE_NL_LANGINFO"]="0"
S["HAVE_NL_LANGINFO"]="1"
S["GNULIB_NL_LANGINFO"]="1"
S["INET_PTON_LIB"]=""
S["NEXT_AS_FIRST_DIRECTIVE_SYS_TIME_H"]="<sys/time.h>"
S["NEXT_SYS_TIME_H"]="<sys/time.h>"
S["REPLACE_STRUCT_TIMEVAL"]="0"
S["REPLACE_GETTIMEOFDAY"]="0"
S["HAVE_SYS_TIME_H"]="1"
S["HAVE_STRUCT_TIMEVAL"]="1"
S["HAVE_GETTIMEOFDAY"]="1"
S["GNULIB_GETTIMEOFDAY"]="1"
S["LTLIBINTL"]=""
S["LIBINTL"]=""
S["GETHOSTNAME_LIB"]=""
S["GETADDRINFO_LIB"]=""
S["INET_NTOP_LIB"]=""
S["SERVENT_LIB"]=""
S["HOSTENT_LIB"]=""
S["HAVE_NETDB_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_NETDB_H"]="<netdb.h>"
S["NEXT_NETDB_H"]="<netdb.h>"
S["REPLACE_GAI_STRERROR"]="0"
S["HAVE_DECL_GETNAMEINFO"]="1"
S["HAVE_DECL_GETADDRINFO"]="1"
S["HAVE_DECL_GAI_STRERROR"]="1"
S["HAVE_DECL_FREEADDRINFO"]="1"
S["HAVE_STRUCT_ADDRINFO"]="1"
S["GNULIB_GETADDRINFO"]="1"
S["WINDOWS_64_BIT_ST_SIZE"]="0"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_STAT_H"]="<sys/stat.h>"
S["NEXT_SYS_STAT_H"]="<sys/stat.h>"
S["REPLACE_UTIMENSAT"]="0"
S["REPLACE_STAT"]="0"
S["REPLACE_MKNOD"]="0"
S["REPLACE_MKFIFO"]="0"
S["REPLACE_MKDIR"]="0"
S["REPLACE_LSTAT"]="0"
S["REPLACE_FUTIMENS"]="0"
S["REPLACE_FSTATAT"]="0"
S["REPLACE_FSTAT"]="0"
S["HAVE_UTIMENSAT"]="1"
S["HAVE_MKNODAT"]="1"
S["HAVE_MKNOD"]="1"
S["HAVE_MKFIFOAT"]="1"
S["HAVE_MKFIFO"]="1"
S["HAVE_MKDIRAT"]="1"
S["HAVE_LSTAT"]="1"
S["HAVE_LCHMOD"]="1"
S["HAVE_FUTIMENS"]="1"
S["HAVE_FSTATAT"]="1"
S["HAVE_FCHMODAT"]="1"
S["GNULIB_UTIMENSAT"]="0"
S["GNULIB_STAT"]="1"
S["GNULIB_MKNODAT"]="0"
S["GNULIB_MKNOD"]="0"
S["GNULIB_MKFIFOAT"]="0"
S["GNULIB_MKFIFO"]="0"
S["GNULIB_MKDIRAT"]="0"
S["GNULIB_LSTAT"]="1"
S["GNULIB_LCHMOD"]="0"
S["GNULIB_FUTIMENS"]="0"
S["GNULIB_FSTATAT"]="0"
S["GNULIB_FSTAT"]="1"
S["GNULIB_FCHMODAT"]="0"
S["WINDOWS_64_BIT_OFF_T"]="0"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_TYPES_H"]="<sys/types.h>"
S["NEXT_SYS_TYPES_H"]="<sys/types.h>"
S["GL_GENERATE_FNMATCH_H_FALSE"]=""
S["GL_GENERATE_FNMATCH_H_TRUE"]="#"
S["FNMATCH_H"]=""
S["REPLACE_ITOLD"]="0"
S["GL_GENERATE_FLOAT_H_FALSE"]=""
S["GL_GENERATE_FLOAT_H_TRUE"]="#"
S["FLOAT_H"]=""
S["NEXT_AS_FIRST_DIRECTIVE_FLOAT_H"]=""
S["NEXT_FLOAT_H"]=""
S["UNDEFINE_STRTOK_R"]="0"
S["REPLACE_STRTOK_R"]="0"
S["REPLACE_STRSIGNAL"]="0"
S["REPLACE_STRNLEN"]="0"
S["REPLACE_STRNDUP"]="0"
S["REPLACE_STRNCAT"]="0"
S["REPLACE_STRERROR_R"]="1"
S["REPLACE_STRERROR"]="0"
S["REPLACE_STRCHRNUL"]="0"
S["REPLACE_STRCASESTR"]="0"
S["REPLACE_STRSTR"]="0"
S["REPLACE_STRDUP"]="0"
S["REPLACE_STPNCPY"]="0"
S["REPLACE_MEMMEM"]="0"
S["REPLACE_MEMCHR"]="0"
S["HAVE_STRVERSCMP"]="1"
S["HAVE_DECL_STRSIGNAL"]="1"
S["HAVE_DECL_STRERROR_R"]="1"
S["HAVE_DECL_STRTOK_R"]="1"
S["HAVE_STRCASESTR"]="1"
S["HAVE_STRSEP"]="1"
S["HAVE_STRPBRK"]="1"
S["HAVE_DECL_STRNLEN"]="1"
S["HAVE_DECL_STRNDUP"]="1"
S["HAVE_DECL_STRDUP"]="1"
S["HAVE_STRCHRNUL"]="1"
S["HAVE_STPNCPY"]="1"
S["HAVE_STPCPY"]="1"
S["HAVE_RAWMEMCHR"]="1"
S["HAVE_DECL_MEMRCHR"]="1"
S["HAVE_MEMPCPY"]="1"
S["HAVE_DECL_MEMMEM"]="1"
S["HAVE_MEMCHR"]="1"
S["HAVE_FFSLL"]="1"
S["HAVE_FFSL"]="1"
S["HAVE_MBSLEN"]="0"
S["GNULIB_STRVERSCMP"]="0"
S["GNULIB_STRSIGNAL"]="0"
S["GNULIB_STRERROR_R"]="1"
S["GNULIB_STRERROR"]="1"
S["GNULIB_MBSTOK_R"]="0"
S["GNULIB_MBSSEP"]="0"
S["GNULIB_MBSSPN"]="0"
S["GNULIB_MBSPBRK"]="0"
S["GNULIB_MBSCSPN"]="0"
S["GNULIB_MBSCASESTR"]="0"
S["GNULIB_MBSPCASECMP"]="0"
S["GNULIB_MBSNCASECMP"]="0"
S["GNULIB_MBSCASECMP"]="0"
S["GNULIB_MBSSTR"]="0"
S["GNULIB_MBSRCHR"]="0"
S["GNULIB_MBSCHR"]="0"
S["GNULIB_MBSNLEN"]="0"
S["GNULIB_MBSLEN"]="0"
S["GNULIB_STRTOK_R"]="1"
S["GNULIB_STRCASESTR"]="0"
S["GNULIB_STRSTR"]="0"
S["GNULIB_STRSEP"]="1"
S["GNULIB_STRPBRK"]="0"
S["GNULIB_STRNLEN"]="1"
S["GNULIB_STRNDUP"]="1"
S["GNULIB_STRNCAT"]="0"
S["GNULIB_STRDUP"]="1"
S["GNULIB_STRCHRNUL"]="1"
S["GNULIB_STPNCPY"]="0"
S["GNULIB_STPCPY"]="1"
S["GNULIB_RAWMEMCHR"]="1"
S["GNULIB_MEMRCHR"]="0"
S["GNULIB_MEMPCPY"]="0"
S["GNULIB_MEMMEM"]="0"
S["GNULIB_MEMCHR"]="1"
S["GNULIB_FFSLL"]="0"
S["GNULIB_FFSL"]="1"
S["HAVE_DECL_STRNCASECMP"]="1"
S["HAVE_STRCASECMP"]="1"
S["HAVE_FFS"]="1"
S["GNULIB_FFS"]="1"
S["LIB_FDATASYNC"]=""
S["NEXT_AS_FIRST_DIRECTIVE_FCNTL_H"]="<fcntl.h>"
S["NEXT_FCNTL_H"]="<fcntl.h>"
S["REPLACE_OPENAT"]="0"
S["REPLACE_OPEN"]="0"
S["REPLACE_FCNTL"]="1"
S["HAVE_OPENAT"]="1"
S["HAVE_FCNTL"]="1"
S["GNULIB_OPENAT"]="0"
S["GNULIB_OPEN"]="1"
S["GNULIB_NONBLOCKING"]="1"
S["GNULIB_FCNTL"]="1"
S["REPLACE_VSPRINTF"]="0"
S["REPLACE_VSNPRINTF"]="0"
S["REPLACE_VPRINTF"]="0"
S["REPLACE_VFPRINTF"]="0"
S["REPLACE_VDPRINTF"]="0"
S["REPLACE_VASPRINTF"]="0"
S["REPLACE_TMPFILE"]="0"
S["REPLACE_STDIO_WRITE_FUNCS"]="0"
S["REPLACE_STDIO_READ_FUNCS"]="0"
S["REPLACE_SPRINTF"]="0"
S["REPLACE_SNPRINTF"]="0"
S["REPLACE_RENAMEAT"]="0"
S["REPLACE_RENAME"]="0"
S["REPLACE_REMOVE"]="0"
S["REPLACE_PRINTF"]="0"
S["REPLACE_POPEN"]="0"
S["REPLACE_PERROR"]="0"
S["REPLACE_OBSTACK_PRINTF"]="0"
S["REPLACE_GETLINE"]="0"
S["REPLACE_GETDELIM"]="0"
S["REPLACE_FTELLO"]="0"
S["REPLACE_FTELL"]="0"
S["REPLACE_FSEEKO"]="1"
S["REPLACE_FSEEK"]="1"
S["REPLACE_FREOPEN"]="0"
S["REPLACE_FPURGE"]="0"
S["REPLACE_FPRINTF"]="0"
S["REPLACE_FOPEN"]="0"
S["REPLACE_FFLUSH"]="1"
S["REPLACE_FDOPEN"]="0"
S["REPLACE_FCLOSE"]="1"
S["REPLACE_DPRINTF"]="0"
S["HAVE_VDPRINTF"]="1"
S["HAVE_VASPRINTF"]="1"
S["HAVE_RENAMEAT"]="1"
S["HAVE_POPEN"]="1"
S["HAVE_PCLOSE"]="1"
S["HAVE_FTELLO"]="1"
S["HAVE_FSEEKO"]="1"
S["HAVE_DPRINTF"]="1"
S["HAVE_DECL_VSNPRINTF"]="1"
S["HAVE_DECL_SNPRINTF"]="1"
S["HAVE_DECL_OBSTACK_PRINTF"]="1"
S["HAVE_DECL_GETLINE"]="1"
S["HAVE_DECL_GETDELIM"]="1"
S["HAVE_DECL_FTELLO"]="1"
S["HAVE_DECL_FSEEKO"]="1"
S["HAVE_DECL_FPURGE"]="0"
S["GNULIB_VSPRINTF_POSIX"]="0"
S["GNULIB_VSNPRINTF"]="1"
S["GNULIB_VPRINTF_POSIX"]="0"
S["GNULIB_VPRINTF"]="1"
S["GNULIB_VFPRINTF_POSIX"]="0"
S["GNULIB_VFPRINTF"]="1"
S["GNULIB_VDPRINTF"]="0"
S["GNULIB_VSCANF"]="0"
S["GNULIB_VFSCANF"]="0"
S["GNULIB_VASPRINTF"]="1"
S["GNULIB_TMPFILE"]="0"
S["GNULIB_STDIO_H_SIGPIPE"]="1"
S["GNULIB_STDIO_H_NONBLOCKING"]="1"
S["GNULIB_SPRINTF_POSIX"]="0"
S["GNULIB_SNPRINTF"]="1"
S["GNULIB_SCANF"]="1"
S["GNULIB_RENAMEAT"]="0"
S["GNULIB_RENAME"]="0"
S["GNULIB_REMOVE"]="0"
S["GNULIB_PUTS"]="1"
S["GNULIB_PUTCHAR"]="1"
S["GNULIB_PUTC"]="1"
S["GNULIB_PRINTF_POSIX"]="0"
S["GNULIB_PRINTF"]="1"
S["GNULIB_POPEN"]="0"
S["GNULIB_PERROR"]="1"
S["GNULIB_PCLOSE"]="0"
S["GNULIB_OBSTACK_PRINTF_POSIX"]="0"
S["GNULIB_OBSTACK_PRINTF"]="0"
S["GNULIB_GETLINE"]="1"
S["GNULIB_GETDELIM"]="1"
S["GNULIB_GETCHAR"]="1"
S["GNULIB_GETC"]="1"
S["GNULIB_FWRITE"]="1"
S["GNULIB_FTELLO"]="1"
S["GNULIB_FTELL"]="1"
S["GNULIB_FSEEKO"]="1"
S["GNULIB_FSEEK"]="1"
S["GNULIB_FSCANF"]="1"
S["GNULIB_FREOPEN"]="0"
S["GNULIB_FREAD"]="1"
S["GNULIB_FPUTS"]="1"
S["GNULIB_FPUTC"]="1"
S["GNULIB_FPURGE"]="1"
S["GNULIB_FPRINTF_POSIX"]="0"
S["GNULIB_FPRINTF"]="1"
S["GNULIB_FOPEN"]="0"
S["GNULIB_FGETS"]="1"
S["GNULIB_FGETC"]="1"
S["GNULIB_FFLUSH"]="1"
S["GNULIB_FDOPEN"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_FCLOSE"]="1"
S["GNULIB_DPRINTF"]="0"
S["GL_GENERATE_EXECINFO_H_FALSE"]=""
S["GL_GENERATE_EXECINFO_H_TRUE"]="#"
S["LIB_EXECINFO"]=""
S["EXECINFO_H"]=""
S["EOVERFLOW_VALUE"]=""
S["EOVERFLOW_HIDDEN"]=""
S["ENOLINK_VALUE"]=""
S["ENOLINK_HIDDEN"]=""
S["EMULTIHOP_VALUE"]=""
S["EMULTIHOP_HIDDEN"]=""
S["GL_GENERATE_ERRNO_H_FALSE"]=""
S["GL_GENERATE_ERRNO_H_TRUE"]="#"
S["ERRNO_H"]=""
S["NEXT_AS_FIRST_DIRECTIVE_ERRNO_H"]=""
S["NEXT_ERRNO_H"]=""
S["LIB_CRYPTO"]=""
S["pkglibexecdir"]="${libexecdir}/${PACKAGE}"
S["runstatedir"]="${localstatedir}/run"
S["lispdir"]="${datarootdir}/emacs/site-lisp"
S["HAVE_MSVC_INVALID_PARAMETER_HANDLER"]="0"
S["LIB_CLOCK_GETTIME"]=""
S["REPLACE_WCTOMB"]="0"
S["REPLACE_UNSETENV"]="0"
S["REPLACE_STRTOD"]="0"
S["REPLACE_SETENV"]="0"
S["REPLACE_REALPATH"]="0"
S["REPLACE_REALLOC"]="0"
S["REPLACE_RANDOM_R"]="0"
S["REPLACE_QSORT_R"]="0"
S["REPLACE_PUTENV"]="0"
S["REPLACE_PTSNAME_R"]="0"
S["REPLACE_PTSNAME"]="0"
S["REPLACE_MKSTEMP"]="0"
S["REPLACE_MBTOWC"]="0"
S["REPLACE_MALLOC"]="0"
S["REPLACE_CANONICALIZE_FILE_NAME"]="0"
S["REPLACE_CALLOC"]="0"
S["HAVE_DECL_UNSETENV"]="1"
S["HAVE_UNLOCKPT"]="1"
S["HAVE_SYS_LOADAVG_H"]="0"
S["HAVE_STRUCT_RANDOM_DATA"]="1"
S["HAVE_STRTOULL"]="1"
S["HAVE_STRTOLL"]="1"
S["HAVE_STRTOD"]="1"
S["HAVE_DECL_SETENV"]="1"
S["HAVE_SETENV"]="1"
S["HAVE_SECURE_GETENV"]="1"
S["HAVE_RPMATCH"]="1"
S["HAVE_REALPATH"]="1"
S["HAVE_RANDOM_R"]="1"
S["HAVE_RANDOM_H"]="0"
S["HAVE_RANDOM"]="1"
S["HAVE_PTSNAME_R"]="1"
S["HAVE_PTSNAME"]="1"
S["HAVE_POSIX_OPENPT"]="1"
S["HAVE_MKSTEMPS"]="1"
S["HAVE_MKSTEMP"]="1"
S["HAVE_MKOSTEMPS"]="1"
S["HAVE_MKOSTEMP"]="1"
S["HAVE_MKDTEMP"]="1"
S["HAVE_GRANTPT"]="1"
S["HAVE_GETSUBOPT"]="1"
S["HAVE_DECL_GETLOADAVG"]="1"
S["HAVE_CANONICALIZE_FILE_NAME"]="1"
S["HAVE_ATOLL"]="1"
S["HAVE__EXIT"]="1"
S["GNULIB_WCTOMB"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_UNSETENV"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_UNLOCKPT"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_SYSTEM_POSIX"]="0"
S["GNULIB_STRTOULL"]="0"
S["GNULIB_STRTOLL"]="0"
S["GNULIB_STRTOD"]="0"
S["GNULIB_SETENV"]="1"
S["GNULIB_SECURE_GETENV"]="1"
S["GNULIB_RPMATCH"]="0"
S["GNULIB_REALPATH"]="1"
S["GNULIB_REALLOC_POSIX"]="1"
S["GNULIB_RANDOM_R"]="1"
S["GNULIB_RANDOM"]="0"
S["GNULIB_QSORT_R"]="0"
S["GNULIB_PUTENV"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_PTSNAME_R"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_PTSNAME"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_POSIX_OPENPT"]="1"
S["GNULIB_MKSTEMPS"]="0"
S["GNULIB_MKSTEMP"]="0"
S["GNULIB_MKOSTEMPS"]="1"
S["GNULIB_MKOSTEMP"]="1"
S["GNULIB_MKDTEMP"]="1"
S["GNULIB_MBTOWC"]="1"
S["GNULIB_MALLOC_POSIX"]="1"
S["GNULIB_GRANTPT"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_GETSUBOPT"]="0"
S["GNULIB_GETLOADAVG"]="0"
S["GNULIB_CANONICALIZE_FILE_NAME"]="1"
S["GNULIB_CALLOC_POSIX"]="1"
S["GNULIB_ATOLL"]="0"
S["GNULIB__EXIT"]="0"
S["GL_GENERATE_BYTESWAP_H_FALSE"]=""
S["GL_GENERATE_BYTESWAP_H_TRUE"]="#"
S["BYTESWAP_H"]=""
S["LOCALE_FR"]="none"
S["REPLACE_WCSWIDTH"]="0"
S["REPLACE_WCWIDTH"]="0"
S["REPLACE_WCSNRTOMBS"]="0"
S["REPLACE_WCSRTOMBS"]="0"
S["REPLACE_WCRTOMB"]="0"
S["REPLACE_MBSNRTOWCS"]="0"
S["REPLACE_MBSRTOWCS"]="0"
S["REPLACE_MBRLEN"]="0"
S["REPLACE_MBRTOWC"]="1"
S["REPLACE_MBSINIT"]="0"
S["REPLACE_WCTOB"]="0"
S["REPLACE_BTOWC"]="0"
S["REPLACE_MBSTATE_T"]="0"
S["HAVE_DECL_WCWIDTH"]="1"
S["HAVE_DECL_WCTOB"]="1"
S["HAVE_WCSWIDTH"]="1"
S["HAVE_WCSTOK"]="1"
S["HAVE_WCSSTR"]="1"
S["HAVE_WCSPBRK"]="1"
S["HAVE_WCSSPN"]="1"
S["HAVE_WCSCSPN"]="1"
S["HAVE_WCSRCHR"]="1"
S["HAVE_WCSCHR"]="1"
S["HAVE_WCSDUP"]="1"
S["HAVE_WCSXFRM"]="1"
S["HAVE_WCSCOLL"]="1"
S["HAVE_WCSNCASECMP"]="1"
S["HAVE_WCSCASECMP"]="1"
S["HAVE_WCSNCMP"]="1"
S["HAVE_WCSCMP"]="1"
S["HAVE_WCSNCAT"]="1"
S["HAVE_WCSCAT"]="1"
S["HAVE_WCPNCPY"]="1"
S["HAVE_WCSNCPY"]="1"
S["HAVE_WCPCPY"]="1"
S["HAVE_WCSCPY"]="1"
S["HAVE_WCSNLEN"]="1"
S["HAVE_WCSLEN"]="1"
S["HAVE_WMEMSET"]="1"
S["HAVE_WMEMMOVE"]="1"
S["HAVE_WMEMCPY"]="1"
S["HAVE_WMEMCMP"]="1"
S["HAVE_WMEMCHR"]="1"
S["HAVE_WCSNRTOMBS"]="1"
S["HAVE_WCSRTOMBS"]="1"
S["HAVE_WCRTOMB"]="1"
S["HAVE_MBSNRTOWCS"]="1"
S["HAVE_MBSRTOWCS"]="1"
S["HAVE_MBRLEN"]="1"
S["HAVE_MBRTOWC"]="1"
S["HAVE_MBSINIT"]="1"
S["HAVE_BTOWC"]="1"
S["GNULIB_WCSWIDTH"]="0"
S["GNULIB_WCSTOK"]="0"
S["GNULIB_WCSSTR"]="0"
S["GNULIB_WCSPBRK"]="0"
S["GNULIB_WCSSPN"]="0"
S["GNULIB_WCSCSPN"]="0"
S["GNULIB_WCSRCHR"]="0"
S["GNULIB_WCSCHR"]="0"
S["GNULIB_WCSDUP"]="0"
S["GNULIB_WCSXFRM"]="0"
S["GNULIB_WCSCOLL"]="0"
S["GNULIB_WCSNCASECMP"]="0"
S["GNULIB_WCSCASECMP"]="0"
S["GNULIB_WCSNCMP"]="0"
S["GNULIB_WCSCMP"]="0"
S["GNULIB_WCSNCAT"]="0"
S["GNULIB_WCSCAT"]="0"
S["GNULIB_WCPNCPY"]="0"
S["GNULIB_WCSNCPY"]="0"
S["GNULIB_WCPCPY"]="0"
S["GNULIB_WCSCPY"]="0"
S["GNULIB_WCSNLEN"]="0"
S["GNULIB_WCSLEN"]="0"
S["GNULIB_WMEMSET"]="0"
S["GNULIB_WMEMMOVE"]="0"
S["GNULIB_WMEMCPY"]="0"
S["GNULIB_WMEMCMP"]="0"
S["GNULIB_WMEMCHR"]="0"
S["GNULIB_WCWIDTH"]="0"
S["GNULIB_WCSNRTOMBS"]="0"
S["GNULIB_WCSRTOMBS"]="0"
S["GNULIB_WCRTOMB"]="1"
S["GNULIB_MBSNRTOWCS"]="0"
S["GNULIB_MBSRTOWCS"]="1"
S["GNULIB_MBRLEN"]="0"
S["GNULIB_MBRTOWC"]="1"
S["GNULIB_MBSINIT"]="1"
S["GNULIB_WCTOB"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_BTOWC"]="1"
S["HAVE_FEATURES_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_ARPA_INET_H"]="<arpa/inet.h>"
S["NEXT_ARPA_INET_H"]="<arpa/inet.h>"
S["HAVE_ARPA_INET_H"]="1"
S["REPLACE_INET_PTON"]="0"
S["REPLACE_INET_NTOP"]="0"
S["HAVE_DECL_INET_PTON"]="1"
S["HAVE_DECL_INET_NTOP"]="1"
S["GNULIB_INET_PTON"]="1"
S["GNULIB_INET_NTOP"]="1"
S["GL_GENERATE_ALLOCA_H_FALSE"]="#"
S["GL_GENERATE_ALLOCA_H_TRUE"]=""
S["ALLOCA_H"]="alloca.h"
S["ALLOCA"]=""
S["LTALLOCA"]=""
S["HAVE_WINSOCK2_H"]="0"
S["REPLACE_IOCTL"]="1"
S["SYS_IOCTL_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS"]="0"
S["SYS_IOCTL_H_HAVE_WINSOCK2_H"]="0"
S["GNULIB_IOCTL"]="1"
S["UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS"]="0"
S["UNISTD_H_HAVE_WINSOCK2_H"]="0"
S["REPLACE_WRITE"]="0"
S["REPLACE_USLEEP"]="0"
S["REPLACE_UNLINKAT"]="0"
S["REPLACE_UNLINK"]="0"
S["REPLACE_TTYNAME_R"]="0"
S["REPLACE_SYMLINKAT"]="0"
S["REPLACE_SYMLINK"]="0"
S["REPLACE_SLEEP"]="0"
S["REPLACE_RMDIR"]="0"
S["REPLACE_READLINKAT"]="0"
S["REPLACE_READLINK"]="0"
S["REPLACE_READ"]="0"
S["REPLACE_PWRITE"]="0"
S["REPLACE_PREAD"]="0"
S["REPLACE_LSEEK"]="0"
S["REPLACE_LINKAT"]="0"
S["REPLACE_LINK"]="0"
S["REPLACE_LCHOWN"]="0"
S["REPLACE_ISATTY"]="0"
S["REPLACE_GETPAGESIZE"]="0"
S["REPLACE_GETGROUPS"]="0"
S["REPLACE_GETLOGIN_R"]="0"
S["REPLACE_GETDTABLESIZE"]="0"
S["REPLACE_GETDOMAINNAME"]="0"
S["REPLACE_GETCWD"]="0"
S["REPLACE_FTRUNCATE"]="0"
S["REPLACE_FCHOWNAT"]="0"
S["REPLACE_DUP2"]="0"
S["REPLACE_DUP"]="0"
S["REPLACE_CLOSE"]="0"
S["REPLACE_CHOWN"]="0"
S["HAVE_SYS_PARAM_H"]="0"
S["HAVE_OS_H"]="0"
S["HAVE_DECL_TTYNAME_R"]="1"
S["HAVE_DECL_SETHOSTNAME"]="1"
S["HAVE_DECL_GETUSERSHELL"]="1"
S["HAVE_DECL_GETPAGESIZE"]="1"
S["HAVE_DECL_GETLOGIN_R"]="1"
S["HAVE_DECL_GETDOMAINNAME"]="1"
S["HAVE_DECL_FDATASYNC"]="1"
S["HAVE_DECL_FCHDIR"]="1"
S["HAVE_DECL_ENVIRON"]="1"
S["HAVE_USLEEP"]="1"
S["HAVE_UNLINKAT"]="1"
S["HAVE_SYMLINKAT"]="1"
S["HAVE_SYMLINK"]="1"
S["HAVE_SLEEP"]="1"
S["HAVE_SETHOSTNAME"]="1"
S["HAVE_READLINKAT"]="1"
S["HAVE_READLINK"]="1"
S["HAVE_PWRITE"]="1"
S["HAVE_PREAD"]="1"
S["HAVE_PIPE2"]="1"
S["HAVE_PIPE"]="1"
S["HAVE_LINKAT"]="1"
S["HAVE_LINK"]="1"
S["HAVE_LCHOWN"]="1"
S["HAVE_GROUP_MEMBER"]="1"
S["HAVE_GETPAGESIZE"]="1"
S["HAVE_GETLOGIN"]="1"
S["HAVE_GETHOSTNAME"]="1"
S["HAVE_GETGROUPS"]="1"
S["HAVE_GETDTABLESIZE"]="1"
S["HAVE_FTRUNCATE"]="1"
S["HAVE_FSYNC"]="1"
S["HAVE_FDATASYNC"]="1"
S["HAVE_FCHOWNAT"]="1"
S["HAVE_FCHDIR"]="1"
S["HAVE_FACCESSAT"]="1"
S["HAVE_EUIDACCESS"]="1"
S["HAVE_DUP3"]="1"
S["HAVE_DUP2"]="1"
S["HAVE_CHOWN"]="1"
S["GNULIB_WRITE"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_USLEEP"]="1"
S["GNULIB_UNLINKAT"]="0"
S["GNULIB_UNLINK"]="0"
S["GNULIB_UNISTD_H_SIGPIPE"]="1"
S["GNULIB_UNISTD_H_NONBLOCKING"]="1"
S["GNULIB_TTYNAME_R"]="1"
S["GNULIB_SYMLINKAT"]="0"
S["GNULIB_SYMLINK"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_SLEEP"]="1"
S["GNULIB_SETHOSTNAME"]="0"
S["GNULIB_RMDIR"]="0"
S["GNULIB_READLINKAT"]="0"
S["GNULIB_READLINK"]="1"
S["GNULIB_READ"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_PWRITE"]="0"
S["GNULIB_PREAD"]="0"
S["GNULIB_PIPE2"]="1"
S["GNULIB_PIPE"]="1"
S["GNULIB_LSEEK"]="1"
S["GNULIB_LINKAT"]="0"
S["GNULIB_LINK"]="0"
S["GNULIB_LCHOWN"]="0"
S["GNULIB_ISATTY"]="1"
S["GNULIB_GROUP_MEMBER"]="0"
S["GNULIB_GETUSERSHELL"]="0"
S["GNULIB_GETPAGESIZE"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_GETLOGIN_R"]="0"
S["GNULIB_GETLOGIN"]="0"
S["GNULIB_GETHOSTNAME"]="1"
S["GNULIB_GETGROUPS"]="1"
S["GNULIB_GETDTABLESIZE"]="1"
S["GNULIB_GETDOMAINNAME"]="0"
S["GNULIB_GETCWD"]="1"
S["GNULIB_FTRUNCATE"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_FSYNC"]="1"
S["GNULIB_FDATASYNC"]="1"
S["GNULIB_FCHOWNAT"]="0"
S["GNULIB_FCHDIR"]="0"
S["GNULIB_FACCESSAT"]="0"
S["GNULIB_EUIDACCESS"]="0"
S["GNULIB_ENVIRON"]="1"
S["GNULIB_DUP3"]="0"
S["GNULIB_DUP2"]="1"
S["GNULIB_DUP"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_CLOSE"]="1"
S["GNULIB_CHOWN"]="1"
S["GNULIB_CHDIR"]="0"
S["HAVE_WS2TCPIP_H"]="0"
S["HAVE_SYS_SOCKET_H"]="1"
S["NEXT_AS_FIRST_DIRECTIVE_SYS_SOCKET_H"]="<sys/socket.h>"
S["NEXT_SYS_SOCKET_H"]="<sys/socket.h>"
S["PRAGMA_COLUMNS"]=""
S["PRAGMA_SYSTEM_HEADER"]="#pragma GCC system_header"
S["INCLUDE_NEXT_AS_FIRST_DIRECTIVE"]="include_next"
S["INCLUDE_NEXT"]="include_next"
S["HAVE_ACCEPT4"]="1"
S["HAVE_SA_FAMILY_T"]="1"
S["HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY"]="1"
S["HAVE_STRUCT_SOCKADDR_STORAGE"]="1"
S["GNULIB_ACCEPT4"]="0"
S["GNULIB_SHUTDOWN"]="0"
S["GNULIB_SETSOCKOPT"]="1"
S["GNULIB_SENDTO"]="0"
S["GNULIB_RECVFROM"]="0"
S["GNULIB_SEND"]="1"
S["GNULIB_RECV"]="1"
S["GNULIB_LISTEN"]="1"
S["GNULIB_GETSOCKOPT"]="IN_LIBVIRT_GNULIB_TESTS"
S["GNULIB_GETSOCKNAME"]="1"
S["GNULIB_GETPEERNAME"]="1"
S["GNULIB_BIND"]="1"
S["GNULIB_ACCEPT"]="1"
S["GNULIB_CONNECT"]="1"
S["GNULIB_SOCKET"]="1"
S["GL_COND_LIBTOOL_FALSE"]="#"
S["GL_COND_LIBTOOL_TRUE"]=""
S["RANLIB"]="ranlib"
S["ARFLAGS"]="cru"
S["AR"]="ar"
S["EGREP"]="/bin/grep -E"
S["GREP"]="/bin/grep"
S["CPP"]="gcc -E"
S["am__fastdepCC_FALSE"]="#"
S["am__fastdepCC_TRUE"]=""
S["CCDEPMODE"]="depmode=gcc3"
S["am__nodep"]="_no"
S["AMDEPBACKSLASH"]="\\"
S["AMDEP_FALSE"]="#"
S["AMDEP_TRUE"]=""
S["am__quote"]=""
S["am__include"]="include"
S["DEPDIR"]=".deps"
S["OBJEXT"]="o"
S["EXEEXT"]=""
S["ac_ct_CC"]="gcc"
S["CPPFLAGS"]=""
S["LDFLAGS"]=""
S["CFLAGS"]="-g -O2"
S["CC"]="gcc -std=gnu99"
S["LIBVIRT_VERSION_NUMBER"]="1002012"
S["LIBVIRT_VERSION_INFO"]="1002:12:1002"
S["LIBVIRT_VERSION"]="1.2.12"
S["LIBVIRT_SONUM"]="0"
S["LIBVIRT_MICRO_VERSION"]="12"
S["LIBVIRT_MINOR_VERSION"]="2"
S["LIBVIRT_MAJOR_VERSION"]="1"
S["host_os"]="linux-gnu"
S["host_vendor"]="unknown"
S["host_cpu"]="x86_64"
S["host"]="x86_64-unknown-linux-gnu"
S["build_os"]="linux-gnu"
S["build_vendor"]="unknown"
S["build_cpu"]="x86_64"
S["build"]="x86_64-unknown-linux-gnu"
S["AM_BACKSLASH"]="\\"
S["AM_DEFAULT_VERBOSITY"]="0"
S["AM_DEFAULT_V"]="$(AM_DEFAULT_VERBOSITY)"
S["AM_V"]="$(V)"
S["am__untar"]="tar -xf -"
S["am__tar"]="tar --format=ustar -chf - \"$$tardir\""
S["AMTAR"]="$${TAR-tar}"
S["am__leading_dot"]="."
S["SET_MAKE"]=""
S["AWK"]="gawk"
S["mkdir_p"]="/bin/mkdir -p"
S["MKDIR_P"]="/bin/mkdir -p"
S["INSTALL_STRIP_PROGRAM"]="$(install_sh) -c -s"
S["STRIP"]="strip"
S["install_sh"]="${SHELL} /root/libvirt/libvirt-1.2.12/build-aux/install-sh"
S["MAKEINFO"]="${SHELL} /root/libvirt/libvirt-1.2.12/build-aux/missing makeinfo"
S["AUTOHEADER"]="${SHELL} /root/libvirt/libvirt-1.2.12/build-aux/missing autoheader"
S["AUTOMAKE"]="${SHELL} /root/libvirt/libvirt-1.2.12/build-aux/missing automake-1.14"
S["AUTOCONF"]="${SHELL} /root/libvirt/libvirt-1.2.12/build-aux/missing autoconf"
S["ACLOCAL"]="${SHELL} /root/libvirt/libvirt-1.2.12/build-aux/missing aclocal-1.14"
S["VERSION"]="1.2.12"
S["PACKAGE"]="libvirt"
S["CYGPATH_W"]="echo"
S["am__isrc"]=""
S["INSTALL_DATA"]="${INSTALL} -m 644"
S["INSTALL_SCRIPT"]="${INSTALL}"
S["INSTALL_PROGRAM"]="${INSTALL}"
S["target_alias"]=""
S["host_alias"]=""
S["build_alias"]=""
S["LIBS"]="-ldl "
S["ECHO_T"]=""
S["ECHO_N"]="-n"
S["ECHO_C"]=""
S["DEFS"]="-DHAVE_CONFIG_H"
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="/usr/lib"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE_TARNAME}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["localstatedir"]="/var"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="${prefix}/share"
S["libexecdir"]="${exec_prefix}/libexec"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s,x,x,"
S["prefix"]="/usr"
S["exec_prefix"]="${prefix}"
S["PACKAGE_URL"]="http://libvirt.org"
S["PACKAGE_BUGREPORT"]="libvir-list@redhat.com"
S["PACKAGE_STRING"]="libvirt 1.2.12"
S["PACKAGE_VERSION"]="1.2.12"
S["PACKAGE_TARNAME"]="libvirt"
S["PACKAGE_NAME"]="libvirt"
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/bash"
_ACAWK
cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"libvirt\""
D["PACKAGE_TARNAME"]=" \"libvirt\""
D["PACKAGE_VERSION"]=" \"1.2.12\""
D["PACKAGE_STRING"]=" \"libvirt 1.2.12\""
D["PACKAGE_BUGREPORT"]=" \"libvir-list@redhat.com\""
D["PACKAGE_URL"]=" \"http://libvirt.org\""
D["PACKAGE"]=" \"libvirt\""
D["VERSION"]=" \"1.2.12\""
D["STDC_HEADERS"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_MEMORY_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["__EXTENSIONS__"]=" 1"
D["_ALL_SOURCE"]=" 1"
D["_DARWIN_C_SOURCE"]=" 1"
D["_GNU_SOURCE"]=" 1"
D["__USE_MINGW_ANSI_STDIO"]=" 1"
D["_POSIX_PTHREAD_SEMANTICS"]=" 1"
D["_TANDEM_SOURCE"]=" 1"
D["HAVE_FSEEKO"]=" 1"
D["_DARWIN_USE_64_BIT_INODE"]=" 1"
D["_REENTRANT"]=" 1"
D["_THREAD_SAFE"]=" 1"
D["HAVE_SYS_SOCKET_H"]=" 1"
D["HAVE_ARPA_INET_H"]=" 1"
D["HAVE_FEATURES_H"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_EXECINFO_H"]=" 1"
D["HAVE_WCTYPE_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_NETDB_H"]=" 1"
D["HAVE_NETINET_IN_H"]=" 1"
D["HAVE_STDIO_EXT_H"]=" 1"
D["HAVE_TERMIOS_H"]=" 1"
D["HAVE_SYS_TIME_H"]=" 1"
D["HAVE_GRP_H"]=" 1"
D["HAVE_LANGINFO_H"]=" 1"
D["HAVE_XLOCALE_H"]=" 1"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_PTY_H"]=" 1"
D["HAVE_POLL_H"]=" 1"
D["HAVE_SYS_IOCTL_H"]=" 1"
D["HAVE_PTHREAD_H"]=" 1"
D["HAVE_MALLOC_H"]=" 1"
D["HAVE_SCHED_H"]=" 1"
D["HAVE_SYS_SELECT_H"]=" 1"
D["HAVE_WCHAR_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_SYS_UIO_H"]=" 1"
D["HAVE_SYS_UTSNAME_H"]=" 1"
D["HAVE_SYS_WAIT_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_MATH_H"]=" 1"
D["HAVE_SPAWN_H"]=" 1"
D["HAVE_SHUTDOWN"]=" 1"
D["HAVE_STRUCT_SOCKADDR_STORAGE"]=" 1"
D["HAVE_SA_FAMILY_T"]=" 1"
D["HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY"]=" 1"
D["HAVE_ALLOCA_H"]=" 1"
D["HAVE_ALLOCA"]=" 1"
D["restrict"]=" __restrict"
D["HAVE_BTOWC"]=" 1"
D["HAVE_CANONICALIZE_FILE_NAME"]=" 1"
D["HAVE_GETCWD"]=" 1"
D["HAVE_READLINK"]=" 1"
D["HAVE_REALPATH"]=" 1"
D["HAVE_READLINKAT"]=" 1"
D["HAVE_CHOWN"]=" 1"
D["HAVE_FCHOWN"]=" 1"
D["HAVE_GETDTABLESIZE"]=" 1"
D["HAVE_FCNTL"]=" 1"
D["HAVE_SYMLINK"]=" 1"
D["HAVE_FFS"]=" 1"
D["HAVE_FFSL"]=" 1"
D["HAVE_ISBLANK"]=" 1"
D["HAVE_ISWCTYPE"]=" 1"
D["HAVE_MBSRTOWCS"]=" 1"
D["HAVE_MEMPCPY"]=" 1"
D["HAVE_WMEMCHR"]=" 1"
D["HAVE_WMEMCPY"]=" 1"
D["HAVE_WMEMPCPY"]=" 1"
D["HAVE___FPURGE"]=" 1"
D["HAVE___FREADING"]=" 1"
D["HAVE_FSYNC"]=" 1"
D["HAVE_GETDELIM"]=" 1"
D["HAVE___FSETLOCKING"]=" 1"
D["HAVE_TCGETATTR"]=" 1"
D["HAVE_TCSETATTR"]=" 1"
D["HAVE_GETTIMEOFDAY"]=" 1"
D["HAVE_LSTAT"]=" 1"
D["HAVE_MBSINIT"]=" 1"
D["HAVE_MBRTOWC"]=" 1"
D["HAVE_MPROTECT"]=" 1"
D["HAVE_GETGROUPLIST"]=" 1"
D["HAVE_MKOSTEMP"]=" 1"
D["HAVE_MKOSTEMPS"]=" 1"
D["HAVE_NL_LANGINFO"]=" 1"
D["HAVE_RECVMSG"]=" 1"
D["HAVE_SENDMSG"]=" 1"
D["HAVE_STRERROR_R"]=" 1"
D["HAVE___XPG_STRERROR_R"]=" 1"
D["HAVE_PIPE"]=" 1"
D["HAVE_PIPE2"]=" 1"
D["HAVE_POSIX_OPENPT"]=" 1"
D["HAVE_SECURE_GETENV"]=" 1"
D["HAVE_SETENV"]=" 1"
D["HAVE_SIGACTION"]=" 1"
D["HAVE_SIGALTSTACK"]=" 1"
D["HAVE_SIGINTERRUPT"]=" 1"
D["HAVE_SLEEP"]=" 1"
D["HAVE_SNPRINTF"]=" 1"
D["HAVE_STRDUP"]=" 1"
D["HAVE_CATGETS"]=" 1"
D["HAVE_STRNDUP"]=" 1"
D["HAVE_STRPTIME"]=" 1"
D["HAVE_LOCALTIME_R"]=" 1"
D["HAVE_TIMEGM"]=" 1"
D["HAVE_USLEEP"]=" 1"
D["HAVE_WCRTOMB"]=" 1"
D["HAVE_ISWCNTRL"]=" 1"
D["HAVE_GETEGID"]=" 1"
D["HAVE_FTRUNCATE"]=" 1"
D["HAVE_NEWLOCALE"]=" 1"
D["HAVE_SOCKETPAIR"]=" 1"
D["HAVE_PTSNAME_R"]=" 1"
D["HAVE_SHUTDOWN"]=" 1"
D["HAVE_WCTOB"]=" 1"
D["HAVE_CFMAKERAW"]=" 1"
D["HAVE_FALLOCATE"]=" 1"
D["HAVE_GETEUID"]=" 1"
D["HAVE_GETGID"]=" 1"
D["HAVE_GETGRNAM_R"]=" 1"
D["HAVE_GETMNTENT_R"]=" 1"
D["HAVE_GETPWUID_R"]=" 1"
D["HAVE_GETUID"]=" 1"
D["HAVE_KILL"]=" 1"
D["HAVE_MMAP"]=" 1"
D["HAVE_POSIX_FALLOCATE"]=" 1"
D["HAVE_POSIX_MEMALIGN"]=" 1"
D["HAVE_PRLIMIT"]=" 1"
D["HAVE_REGEXEC"]=" 1"
D["HAVE_SCHED_GETAFFINITY"]=" 1"
D["HAVE_SETGROUPS"]=" 1"
D["HAVE_SETNS"]=" 1"
D["HAVE_SETRLIMIT"]=" 1"
D["HAVE_GETIFADDRS"]=" 1"
D["HAVE_LANGINFO_CODESET"]=" 1"
D["FUNC_REALPATH_WORKS"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_CHOWN"]=" 1"
D["HAVE_UNSIGNED_LONG_LONG_INT"]=" 1"
D["HAVE_ENVIRON_DECL"]=" 1"
D["HAVE_WORKING_O_NOATIME"]=" 1"
D["HAVE_WORKING_O_NOFOLLOW"]=" 1"
D["HAVE_DECL_FDATASYNC"]=" 1"
D["HAVE_MBSTATE_T"]=" 1"
D["HAVE_DECL_FSEEKO"]=" 1"
D["FUNC_FFLUSH_STDIN"]=" 0"
D["HAVE_DECL_FTELLO"]=" 1"
D["HAVE_GETHOSTBYNAME"]=" 1"
D["HAVE_GETSERVBYNAME"]=" 1"
D["HAVE_DECL_INET_NTOP"]=" 1"
D["HAVE_IPV4"]=" 1"
D["HAVE_IPV6"]=" 1"
D["HAVE_DECL_GETDELIM"]=" 1"
D["GETGROUPS_T"]=" gid_t"
D["HAVE_DECL_GETLINE"]=" 1"
D["HAVE_DECL_GETPASS"]=" 1"
D["HAVE_DECL_FFLUSH_UNLOCKED"]=" 1"
D["HAVE_DECL_FLOCKFILE"]=" 1"
D["HAVE_DECL_FPUTS_UNLOCKED"]=" 1"
D["HAVE_DECL_FUNLOCKFILE"]=" 1"
D["HAVE_DECL_PUTC_UNLOCKED"]=" 1"
D["HAVE_DECL_GETC_UNLOCKED"]=" 1"
D["HAVE_WCHAR_T"]=" 1"
D["USE_POSIX_THREADS"]=" 1"
D["USE_POSIX_THREADS_WEAK"]=" 1"
D["LSTAT_FOLLOWS_SLASHED_SYMLINK"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["MALLOC_0_IS_NONNULL"]=" 1"
D["HAVE_LONG_LONG_INT"]=" 1"
D["HAVE_MAP_ANONYMOUS"]=" 1"
D["HAVE_DECL_ALARM"]=" 1"
D["USER_LABEL_PREFIX"]=" "
D["PROMOTED_MODE_T"]=" mode_t"
D["HAVE_DECL_STRERROR_R"]=" 1"
D["HAVE_SIGSET_T"]=" 1"
D["HAVE_DECL_SETENV"]=" 1"
D["HAVE_SEARCH_H"]=" 1"
D["HAVE_TSEARCH"]=" 1"
D["HAVE_DECL_SNPRINTF"]=" 1"
D["HAVE__BOOL"]=" 1"
D["HAVE_DECL_STRDUP"]=" 1"
D["HAVE_DECL_STRNDUP"]=" 1"
D["HAVE_DECL_STRNLEN"]=" 1"
D["HAVE_TM_GMTOFF"]=" 1"
D["HAVE_DECL_STRTOK_R"]=" 1"
D["HAVE_DECL_TTYNAME_R"]=" 1"
D["HAVE_WINT_T"]=" 1"
D["HAVE_INTTYPES_H_WITH_UINTMAX"]=" 1"
D["HAVE_STDINT_H_WITH_UINTMAX"]=" 1"
D["HAVE_INTMAX_T"]=" 1"
D["DBL_EXPBIT0_WORD"]=" 1"
D["DBL_EXPBIT0_BIT"]=" 20"
D["HAVE_SNPRINTF"]=" 1"
D["HAVE_STRNLEN"]=" 1"
D["HAVE_WCSLEN"]=" 1"
D["HAVE_WCSNLEN"]=" 1"
D["HAVE_MBRTOWC"]=" 1"
D["HAVE_WCRTOMB"]=" 1"
D["HAVE_DECL__SNPRINTF"]=" 0"
D["HAVE_SNPRINTF_RETVAL_C99"]=" 1"
D["HAVE_DECL_VSNPRINTF"]=" 1"
D["HAVE_DECL_STRERROR_R"]=" 1"
D["HAVE_STRERROR_R"]=" 1"
D["STRERROR_R_CHAR_P"]=" 1"
D["HAVE_SIG_ATOMIC_T"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["FLT_EXPBIT0_WORD"]=" 0"
D["FLT_EXPBIT0_BIT"]=" 23"
D["HAVE_LC_MESSAGES"]=" 1"
D["HAVE_POSIX_SPAWN"]=" 1"
D["HAVE_WORKING_POSIX_SPAWN"]=" 1"
D["HAVE_DECL_UNSETENV"]=" 1"
D["GNULIB_TEST_ACCEPT"]=" 1"
D["HAVE_ALLOCA"]=" 1"
D["GNULIB_TEST_BIND"]=" 1"
D["GNULIB_TEST_BTOWC"]=" 1"
D["HAVE_BYTESWAP_H"]=" 1"
D["HAVE_CALLOC_POSIX"]=" 1"
D["GNULIB_TEST_CALLOC_POSIX"]=" 1"
D["GNULIB_CANONICALIZE_LGPL"]=" 1"
D["GNULIB_TEST_CANONICALIZE_FILE_NAME"]=" 1"
D["GNULIB_TEST_REALPATH"]=" 1"
D["GNULIB_TEST_CHOWN"]=" 1"
D["HAVE_CLOCK_GETTIME"]=" 1"
D["HAVE_CLOCK_SETTIME"]=" 1"
D["GNULIB_TEST_CLOEXEC"]=" 1"
D["GNULIB_TEST_CLOSE"]=" 1"
D["GNULIB_TEST_CONNECT"]=" 1"
D["HAVE_DUP2"]=" 1"
D["GNULIB_TEST_DUP2"]=" 1"
D["GNULIB_TEST_ENVIRON"]=" 1"
D["FUNC_FFLUSH_STDIN"]=" 0"
D["GNULIB_TEST_FCLOSE"]=" 1"
D["GNULIB_TEST_FCNTL"]=" 1"
D["GNULIB_TEST_FDATASYNC"]=" 1"
D["FUNC_FFLUSH_STDIN"]=" 0"
D["GNULIB_FFLUSH"]=" 1"
D["GNULIB_TEST_FFLUSH"]=" 1"
D["GNULIB_TEST_FFSL"]=" 1"
D["HAVE_DECL_FPURGE"]=" 0"
D["GNULIB_TEST_FPURGE"]=" 1"
D["GNULIB_TEST_FSEEK"]=" 1"
D["FUNC_FFLUSH_STDIN"]=" 0"
D["GNULIB_TEST_FSEEKO"]=" 1"
D["GNULIB_TEST_FSTAT"]=" 1"
D["GNULIB_TEST_FSYNC"]=" 1"
D["GNULIB_TEST_FTELL"]=" 1"
D["GNULIB_TEST_FTELLO"]=" 1"
D["HAVE_DECL_GAI_STRERROR"]=" 1"
D["HAVE_DECL_GAI_STRERRORA"]=" 0"
D["HAVE_DECL_GETADDRINFO"]=" 1"
D["HAVE_DECL_FREEADDRINFO"]=" 1"
D["HAVE_DECL_GETNAMEINFO"]=" 1"
D["HAVE_STRUCT_ADDRINFO"]=" 1"
D["GNULIB_TEST_GETADDRINFO"]=" 1"
D["GNULIB_TEST_GETCWD"]=" 1"
D["GNULIB_TEST_GETDELIM"]=" 1"
D["GNULIB_TEST_GETDTABLESIZE"]=" 1"
D["HAVE_GETGROUPS"]=" 1"
D["GNULIB_TEST_GETGROUPS"]=" 1"
D["HAVE_GETHOSTNAME"]=" 1"
D["GNULIB_TEST_GETHOSTNAME"]=" 1"
D["GNULIB_TEST_GETLINE"]=" 1"
D["HAVE_GETPASS"]=" 1"
D["GNULIB_TEST_GETPEERNAME"]=" 1"
D["GNULIB_TEST_GETSOCKNAME"]=" 1"
D["GETTIMEOFDAY_TIMEZONE"]=" struct timezone"
D["GNULIB_TEST_GETTIMEOFDAY"]=" 1"
D["HAVE_GETHOSTBYNAME"]=" 1"
D["HAVE_DECL_INET_NTOP"]=" 1"
D["HAVE_DECL_INET_PTON"]=" 1"
D["HAVE_IOCTL"]=" 1"
D["GNULIB_TEST_IOCTL"]=" 1"
D["GNULIB_TEST_ISATTY"]=" 1"
D["GNULIB_TEST_LISTEN"]=" 1"
D["GNULIB_TEST_LOCALECONV"]=" 1"
D["HAVE_PTHREAD_RWLOCK"]=" 1"
D["HAVE_PTHREAD_MUTEX_RECURSIVE"]=" 1"
D["GNULIB_LOCK"]=" 1"
D["GNULIB_TEST_LSEEK"]=" 1"
D["GNULIB_TEST_LSTAT"]=" 1"
D["HAVE_MALLOC_POSIX"]=" 1"
D["GNULIB_TEST_MALLOC_POSIX"]=" 1"
D["MBRTOWC_EMPTY_INPUT_BUG"]=" 1"
D["GNULIB_TEST_MBRTOWC"]=" 1"
D["GNULIB_TEST_MBSINIT"]=" 1"
D["GNULIB_TEST_MBSRTOWCS"]=" 1"
D["GNULIB_TEST_MBTOWC"]=" 1"
D["GNULIB_TEST_MEMCHR"]=" 1"
D["HAVE_MKDTEMP"]=" 1"
D["GNULIB_TEST_MKDTEMP"]=" 1"
D["GNULIB_MKOSTEMP"]=" 1"
D["GNULIB_TEST_MKOSTEMP"]=" 1"
D["GNULIB_MKOSTEMPS"]=" 1"
D["GNULIB_TEST_MKOSTEMPS"]=" 1"
D["GNULIB_TEST_MKTIME"]=" 1"
D["FUNC_NL_LANGINFO_YESEXPR_WORKS"]=" 1"
D["GNULIB_TEST_NL_LANGINFO"]=" 1"
D["GNULIB_TEST_NONBLOCKING"]=" 1"
D["GNULIB_NONBLOCKING"]=" 1"
D["GNULIB_TEST_OPEN"]=" 1"
D["HAVE_DECL_OPENPTY"]=" 1"
D["HAVE_OPENPTY"]=" 1"
D["GNULIB_TEST_OPENPTY"]=" 1"
D["_LINUX_SOURCE_COMPAT"]=" 1"
D["GNULIB_TEST_PERROR"]=" 1"
D["HAVE_SYS_SYSINFO_H"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_SYSCTL_H"]=" 1"
D["HAVE_SYSCTL"]=" 1"
D["HAVE_SYSINFO"]=" 1"
D["HAVE_STRUCT_SYSINFO_MEM_UNIT"]=" 1"
D["GNULIB_TEST_PIPE"]=" 1"
D["GNULIB_TEST_PIPE2"]=" 1"
D["HAVE_POLL"]=" 1"
D["GNULIB_TEST_POLL"]=" 1"
D["GNULIB_TEST_POSIX_OPENPT"]=" 1"
D["HAVE_PTHREAD_T"]=" 1"
D["HAVE_PTHREAD_SPINLOCK_T"]=" 1"
D["GNULIB_PTHREAD"]=" 1"
D["GNULIB_TEST_PTHREAD_SIGMASK"]=" 1"
D["HAVE_RAISE"]=" 1"
D["GNULIB_TEST_RAISE"]=" 1"
D["HAVE_STRUCT_RANDOM_DATA"]=" 1"
D["HAVE_RANDOM_R"]=" 1"
D["GNULIB_TEST_RANDOM_R"]=" 1"
D["HAVE_RAWMEMCHR"]=" 1"
D["GNULIB_TEST_RAWMEMCHR"]=" 1"
D["GNULIB_TEST_READLINK"]=" 1"
D["HAVE_REALLOC_POSIX"]=" 1"
D["GNULIB_TEST_REALLOC_POSIX"]=" 1"
D["GNULIB_TEST_RECV"]=" 1"
D["GNULIB_TEST_SECURE_GETENV"]=" 1"
D["GNULIB_TEST_SELECT"]=" 1"
D["GNULIB_TEST_SEND"]=" 1"
D["HAVE_GETSERVBYNAME"]=" 1"
D["GNULIB_TEST_SETENV"]=" 1"
D["GNULIB_TEST_SETSOCKOPT"]=" 1"
D["HAVE_STRUCT_SIGACTION_SA_SIGACTION"]=" 1"
D["GNULIB_TEST_SIGACTION"]=" 1"
D["GNULIB_SIGPIPE"]=" 1"
D["GNULIB_TEST_SIGPROCMASK"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_DECL_SLEEP"]=" 1"
D["GNULIB_TEST_SLEEP"]=" 1"
D["HAVE_SNPRINTF"]=" 1"
D["GNULIB_TEST_SNPRINTF"]=" 1"
D["GNULIB_SNPRINTF"]=" 1"
D["GNULIB_TEST_SOCKET"]=" 1"
D["GNULIB_TEST_STAT"]=" 1"
D["HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC"]=" 1"
D["TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC"]=" 1"
D["GNULIB_FSCANF"]=" 1"
D["GNULIB_SCANF"]=" 1"
D["HAVE_STPCPY"]=" 1"
D["GNULIB_TEST_STPCPY"]=" 1"
D["HAVE_STRCASECMP"]=" 1"
D["HAVE_STRNCASECMP"]=" 1"
D["HAVE_DECL_STRNCASECMP"]=" 1"
D["HAVE_STRCHRNUL"]=" 1"
D["GNULIB_TEST_STRCHRNUL"]=" 1"
D["GNULIB_TEST_STRDUP"]=" 1"
D["GNULIB_STRERROR"]=" 1"
D["GNULIB_TEST_STRERROR"]=" 1"
D["GNULIB_TEST_STRERROR_R"]=" 1"
D["GNULIB_TEST_STRNDUP"]=" 1"
D["GNULIB_TEST_STRNLEN"]=" 1"
D["GNULIB_TEST_STRPTIME"]=" 1"
D["HAVE_STRSEP"]=" 1"
D["GNULIB_TEST_STRSEP"]=" 1"
D["HAVE_STRTOK_R"]=" 1"
D["GNULIB_TEST_STRTOK_R"]=" 1"
D["HAVE_STRUCT_UTSNAME"]=" 1"
D["HAVE_DECL_LOCALTIME_R"]=" 1"
D["GNULIB_TEST_TIME_R"]=" 1"
D["GNULIB_TEST_TIMEGM"]=" 1"
D["HAVE_TTYNAME_R"]=" 1"
D["HAVE_POSIXDECL_TTYNAME_R"]=" 1"
D["GNULIB_TEST_TTYNAME_R"]=" 1"
D["HAVE_UNAME"]=" 1"
D["GNULIB_TEST_USLEEP"]=" 1"
D["HAVE_VASPRINTF"]=" 1"
D["GNULIB_TEST_VASPRINTF"]=" 1"
D["HAVE_VSNPRINTF"]=" 1"
D["GNULIB_TEST_VSNPRINTF"]=" 1"
D["GNULIB_TEST_WAITPID"]=" 1"
D["GNULIB_TEST_WCRTOMB"]=" 1"
D["HAVE_TOWLOWER"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["GNULIB_TEST_DUP"]=" 1"
D["GNULIB_TEST_FDOPEN"]=" 1"
D["GNULIB_TEST_FTRUNCATE"]=" 1"
D["HAVE_GETPAGESIZE"]=" 1"
D["GNULIB_TEST_GETPAGESIZE"]=" 1"
D["GNULIB_TEST_GETSOCKOPT"]=" 1"
D["HAVE_GRANTPT"]=" 1"
D["GNULIB_TEST_GRANTPT"]=" 1"
D["HAVE_ISNAND_IN_LIBC"]=" 1"
D["DBL_EXPBIT0_WORD"]=" 1"
D["DBL_EXPBIT0_BIT"]=" 20"
D["HAVE_ISNANF_IN_LIBC"]=" 1"
D["FLT_EXPBIT0_WORD"]=" 0"
D["FLT_EXPBIT0_BIT"]=" 23"
D["LDBL_EXPBIT0_WORD"]=" 2"
D["LDBL_EXPBIT0_BIT"]=" 0"
D["LDBL_EXPBIT0_WORD"]=" 2"
D["LDBL_EXPBIT0_BIT"]=" 0"
D["HAVE_SETLOCALE"]=" 1"
D["HAVE_USELOCALE"]=" 1"
D["HAVE_MAP_ANONYMOUS"]=" 1"
D["HAVE_BUG_BIG_NANOSLEEP"]=" 1"
D["GNULIB_TEST_NANOSLEEP"]=" 1"
D["HAVE_IF_NAMEINDEX"]=" 1"
D["GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE"]=" 1"
D["GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2"]=" 1"
D["GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN"]=" 1"
D["GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_DESTROY"]=" 1"
D["GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_INIT"]=" 1"
D["GNULIB_TEST_POSIX_SPAWNATTR_DESTROY"]=" 1"
D["GNULIB_TEST_POSIX_SPAWNATTR_INIT"]=" 1"
D["GNULIB_TEST_POSIX_SPAWNATTR_SETFLAGS"]=" 1"
D["GNULIB_TEST_POSIX_SPAWNATTR_SETSIGMASK"]=" 1"
D["GNULIB_TEST_POSIX_SPAWNP"]=" 1"
D["HAVE_DECL_PROGRAM_INVOCATION_NAME"]=" 1"
D["HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME"]=" 1"
D["HAVE_PTSNAME"]=" 1"
D["GNULIB_TEST_PTSNAME"]=" 1"
D["GNULIB_TEST_PTSNAME_R"]=" 1"
D["GNULIB_TEST_PUTENV"]=" 1"
D["HAVE_MAP_ANONYMOUS"]=" 1"
D["GNULIB_TEST_READ"]=" 1"
D["GNULIB_TEST_SETLOCALE"]=" 1"
D["GNULIB_TEST_SIGNBIT"]=" 1"
D["HAVE_POSIX_SPAWNATTR_T"]=" 1"
D["HAVE_POSIX_SPAWN_FILE_ACTIONS_T"]=" 1"
D["HAVE_MAP_ANONYMOUS"]=" 1"
D["GNULIB_TEST_SYMLINK"]=" 1"
D["HAVE_PTHREAD_ATFORK"]=" 1"
D["HAVE_UNLOCKPT"]=" 1"
D["GNULIB_TEST_UNLOCKPT"]=" 1"
D["HAVE_UNSETENV"]=" 1"
D["GNULIB_TEST_UNSETENV"]=" 1"
D["HAVE_WAITID"]=" 1"
D["HAVE_DECL_WCTOB"]=" 1"
D["GNULIB_TEST_WCTOB"]=" 1"
D["GNULIB_TEST_WCTOMB"]=" 1"
D["GNULIB_TEST_WRITE"]=" 1"
D["HAVE_DLFCN_H"]=" 1"
D["LT_OBJDIR"]=" \".libs/\""
D["WORKING_PRAGMA_PUSH"]=" 1"
D["HAVE_SUGGEST_ATTRIBUTE_FORMAT"]=" 1"
D["lint"]=" 1"
D["WITH_CURL"]=" 1"
D["WITH_PCIACCESS"]=" 1"
D["HAVE_LIBSELINUX"]=" 1"
D["WITH_SELINUX"]=" 1"
D["VIR_SELINUX_CTX_CONST"]=" "
D["SELINUX_MOUNT"]=" \"/selinux\""
D["HAVE_SELINUX_LABEL_H"]=" 1"
D["WITH_UDEV"]=" 1"
D["HAVE_UDEV_LOGGING"]=" 1"
D["WITH_YAJL"]=" 1"
D["WITH_YAJL2"]=" 1"
D["HAVE_CPUID"]=" 1"
D["SIZEOF_LONG"]=" 8"
D["HAVE_PTHREAD_MUTEXATTR_INIT"]=" 1"
D["HAVE_PWD_H"]=" 1"
D["HAVE_PATHS_H"]=" 1"
D["HAVE_REGEX_H"]=" 1"
D["HAVE_SYS_UN_H"]=" 1"
D["HAVE_SYS_POLL_H"]=" 1"
D["HAVE_SYSLOG_H"]=" 1"
D["HAVE_MNTENT_H"]=" 1"
D["HAVE_NET_ETHERNET_H"]=" 1"
D["HAVE_LINUX_MAGIC_H"]=" 1"
D["HAVE_SYS_UN_H"]=" 1"
D["HAVE_SYS_SYSCALL_H"]=" 1"
D["HAVE_SYS_SYSCTL_H"]=" 1"
D["HAVE_NETINET_TCP_H"]=" 1"
D["HAVE_IFADDRS_H"]=" 1"
D["HAVE_LIBTASN1_H"]=" 1"
D["HAVE_SYS_MOUNT_H"]=" 1"
D["HAVE_DECL_HTOLE64"]=" 1"
D["VIR_ATOMIC_OPS_GCC"]=" 1"
D["HAVE_STRUCT_IFREQ"]=" 1"
D["DMIDECODE"]=" \"/usr/sbin/dmidecode\""
D["DNSMASQ"]=" \"/usr/sbin/dnsmasq\""
D["RADVD"]=" \"radvd\""
D["TC"]=" \"/sbin/tc\""
D["OVSVSCTL"]=" \"/usr/bin/ovs-vsctl\""
D["UDEVADM"]=" \"/sbin/udevadm\""
D["MODPROBE"]=" \"/sbin/modprobe\""
D["RMMOD"]=" \"/sbin/rmmod\""
D["SCRUB"]=" \"scrub\""
D["ADDR2LINE"]=" \"/usr/bin/addr2line\""
D["ENABLE_DEBUG"]=" /**/"
D["IP_PATH"]=" \"/sbin/ip\""
D["IPTABLES_PATH"]=" \"/sbin/iptables\""
D["IP6TABLES_PATH"]=" \"/sbin/ip6tables\""
D["EBTABLES_PATH"]=" \"/sbin/ebtables\""
D["WITH_OPENVZ"]=" 1"
D["WITH_VMWARE"]=" 1"
D["VBOX_XPCOMC_DIR"]=" \"\""
D["WITH_VBOX"]=" 1"
D["WITH_QEMU"]=" 1"
D["WITH_TEST"]=" 1"
D["WITH_REMOTE"]=" 1"
D["WITH_LIBVIRTD"]=" 1"
D["WITH_LIBXL"]=" 1"
D["HAVE_XENSTORE_H"]=" 1"
D["HAVE_XEN_XEN_H"]=" 1"
D["HAVE_XEN_VERSION_H"]=" 1"
D["HAVE_XEN_DOM0_OPS_H"]=" 1"
D["HAVE_XEN_SYS_PRIVCMD_H"]=" 1"
D["WITH_XEN"]=" 1"
D["WITH_XEN_INOTIFY"]=" 1"
D["HAVE_LINUX_KVM_H"]=" 1"
D["HAVE_DECL_LO_FLAGS_AUTOCLEAR"]=" 1"
D["HAVE_DECL_LOOP_CTL_GET_FREE"]=" 1"
D["WITH_LXC"]=" 1"
D["HAVE_LINUX_PARAM_H"]=" 1"
D["HAVE_LINUX_SOCKIOS_H"]=" 1"
D["HAVE_LINUX_IF_BRIDGE_H"]=" 1"
D["HAVE_LINUX_IF_TUN_H"]=" 1"
D["HAVE_XMLURI_QUERY_RAW"]=" /**/"
D["WITH_GNUTLS_GCRYPT"]=" 1"
D["HAVE_GNUTLS_CRYPTO_H"]=" 1"
D["WITH_GNUTLS"]=" 1"
D["PKCHECK_PATH"]=" \"/usr/bin/pkcheck\""
D["WITH_POLKIT"]=" 1"
D["WITH_POLKIT1"]=" 1"
D["VIR_CHRDEV_LOCK_FILE_PATH"]=" \"/var/lock\""
D["HAVE_SELINUX_LXC_CONTEXTS_PATH"]=" 1"
D["WITH_SECDRIVER_SELINUX"]=" 1"
D["WITH_UML"]=" 1"
D["WITH_PM_UTILS"]=" 1"
D["WITH_NETWORK"]=" 1"
D["WITH_BRIDGE"]=" 1"
D["WITH_SECRETS"]=" 1"
D["WITH_STORAGE_DIR"]=" 1"
D["WITH_STORAGE_FS"]=" 1"
D["MOUNT"]=" \"/bin/mount\""
D["UMOUNT"]=" \"/bin/umount\""
D["MKFS"]=" \"/sbin/mkfs\""
D["SHOWMOUNT"]=" \"\""
D["WITH_STORAGE_ISCSI"]=" 1"
D["ISCSIADM"]=" \"iscsiadm\""
D["WITH_STORAGE_SCSI"]=" 1"
D["WITH_STORAGE_MPATH"]=" 1"
D["HAVE_LIBUUID"]=" 1"
D["HAVE_LIBDEVMAPPER_H"]=" 1"
D["WITH_STORAGE"]=" 1"
D["WITH_ESX"]=" 1"
D["WITH_VMX"]=" 1"
D["ENABLE_NLS"]=" 1"
D["HAVE_GETTEXT"]=" 1"
D["HAVE_DCGETTEXT"]=" 1"
D["WITH_DRIVER_MODULES"]=" 1"
D["WITH_NODE_DEVICES"]=" 1"
D["WITH_NWFILTER"]=" 1"
D["WITH_INTERFACE"]=" 1"
D["QEMU_USER"]=" \"root\""
D["QEMU_GROUP"]=" \"root\""
D["WITH_MACVTAP"]=" 1"
D["HAVE_DECL_MACVLAN_MODE_PASSTHRU"]=" 1"
D["WITH_VIRTUALPORT"]=" 1"
D["HAVE_DECL_GET_VLAN_VID_CMD"]=" 1"
D["HAVE_LIBNL"]=" 1"
D["HAVE_LIBNL1"]=" 1"
D["HAVE_RPC_TYPES_H"]=" 1"
D["HAVE_STRUCT_IFREQ_IFR_NEWNAME"]=" 1"
D["HAVE_STRUCT_IFREQ_IFR_IFINDEX"]=" 1"
D["HAVE_STRUCT_IFREQ_IFR_HWADDR"]=" 1"
D["HAVE_DECL_BRDGSFD"]=" 0"
D["HAVE_DECL_BRDGADD"]=" 0"
D["HAVE_DECL_BRDGDEL"]=" 0"
D["HAVE_DECL_CPUSET_GETAFFINITY"]=" 0"
D["STATIC_ANALYSIS"]=" 0"
D["DEFAULT_EDITOR"]=" \"vi\""
D["isbase64"]=" libvirt_gl_isbase64"
D["base64_encode"]=" libvirt_gl_base64_encode"
D["base64_encode_alloc"]=" libvirt_gl_base64_encode_alloc"
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS  :L $CONFIG_LINKS  :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
$as_echo "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`$as_echo "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
  s&\${datarootdir}&${prefix}/share&g' ;;
esac
ac_sed_extra="/^[	 ]*VPATH[	 ]*=[	 ]*/{
h
s///
s/^/:/
s/[	 ]*$/:/
s/:\$(srcdir):/:/g
s/:\${srcdir}:/:/g
s/:@srcdir@:/:/g
s/^:*//
s/:*$//
x
s/\(=[	 ]*\).*/\1/
G
s/\n//
s/^[^=]*=[	 ]*$//
}

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
$as_echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
# Compute "$ac_file"'s index in $config_headers.
_am_arg="$ac_file"
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$_am_arg" : 'X\(//\)[^/]' \| \
	 X"$_am_arg" : 'X\(//\)$' \| \
	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$_am_arg" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`/stamp-h$_am_stamp_count
 ;;
  :L)
  #
  # CONFIG_LINK
  #

  if test "$ac_source" = "$ac_file" && test "$srcdir" = '.'; then
    :
  else
    # Prefer the file from the source tree if names are identical.
    if test "$ac_source" = "$ac_file" || test ! -r "$ac_source"; then
      ac_source=$srcdir/$ac_source
    fi

    { $as_echo "$as_me:${as_lineno-$LINENO}: linking $ac_source to $ac_file" >&5
$as_echo "$as_me: linking $ac_source to $ac_file" >&6;}

    if test ! -r "$ac_source"; then
      as_fn_error $? "$ac_source: file not found" "$LINENO" 5
    fi
    rm -f "$ac_file"

    # Try a relative symlink, then a hard link, then a copy.
    case $ac_source in
    [\\/$]* | ?:[\\/]* ) ac_rel_source=$ac_source ;;
	*) ac_rel_source=$ac_top_build_prefix$ac_source ;;
    esac
    ln -s "$ac_rel_source" "$ac_file" 2>/dev/null ||
      ln "$ac_source" "$ac_file" 2>/dev/null ||
      cp -p "$ac_source" "$ac_file" ||
      as_fn_error $? "cannot link or copy $ac_source to $ac_file" "$LINENO" 5
  fi
 ;;
  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
$as_echo "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named 'Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`$as_dirname -- "$mf" ||
$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$mf" : 'X\(//\)[^/]' \| \
	 X"$mf" : 'X\(//\)$' \| \
	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$mf" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running 'make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "$am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`$as_dirname -- "$file" ||
$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$file" : 'X\(//\)[^/]' \| \
	 X"$file" : 'X\(//\)$' \| \
	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      as_dir=$dirpart/$fdir; as_fn_mkdir_p
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
 ;;
    "libtool":C)

    # See if we are running on zsh, and set the options which allow our
    # commands through without removal of \ escapes.
    if test -n "${ZSH_VERSION+set}" ; then
      setopt NO_GLOB_SUBST
    fi

    cfgfile="${ofile}T"
    trap "$RM \"$cfgfile\"; exit 1" 1 2 15
    $RM "$cfgfile"

    cat <<_LT_EOF >> "$cfgfile"
#! $SHELL

# `$ECHO "$ofile" | sed 's%^.*/%%'` - Provide generalized library-building support services.
# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION
# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
# NOTE: Changes made to this file will be lost: look at ltmain.sh.
#
#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,
#                 2006, 2007, 2008, 2009, 2010, 2011 Free Software
#                 Foundation, Inc.
#   Written by Gordon Matzigkeit, 1996
#
#   This file is part of GNU Libtool.
#
# GNU Libtool is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# As a special exception to the GNU General Public License,
# if you distribute this file as part of a program or library that
# is built using GNU Libtool, you may include this file under the
# same distribution terms that you use for the rest of that program.
#
# GNU Libtool is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Libtool; see the file COPYING.  If not, a copy
# can be downloaded from http://www.gnu.org/licenses/gpl.html, or
# obtained by writing to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.


# The names of the tagged configurations supported by this script.
available_tags=""

# ### BEGIN LIBTOOL CONFIG

# Assembler program.
AS=$lt_AS

# DLL creation program.
DLLTOOL=$lt_DLLTOOL

# Object dumper program.
OBJDUMP=$lt_OBJDUMP

# Which release of libtool.m4 was used?
macro_version=$macro_version
macro_revision=$macro_revision

# Whether or not to build shared libraries.
build_libtool_libs=$enable_shared

# Whether or not to build static libraries.
build_old_libs=$enable_static

# What type of objects to build.
pic_mode=$pic_mode

# Whether or not to optimize for fast installation.
fast_install=$enable_fast_install

# Shell to use when invoking shell scripts.
SHELL=$lt_SHELL

# An echo program that protects backslashes.
ECHO=$lt_ECHO

# The PATH separator for the build system.
PATH_SEPARATOR=$lt_PATH_SEPARATOR

# The host system.
host_alias=$host_alias
host=$host
host_os=$host_os

# The build system.
build_alias=$build_alias
build=$build
build_os=$build_os

# A sed program that does not truncate output.
SED=$lt_SED

# Sed that helps us avoid accidentally triggering echo(1) options like -n.
Xsed="\$SED -e 1s/^X//"

# A grep program that handles long lines.
GREP=$lt_GREP

# An ERE matcher.
EGREP=$lt_EGREP

# A literal string matcher.
FGREP=$lt_FGREP

# A BSD- or MS-compatible name lister.
NM=$lt_NM

# Whether we need soft or hard links.
LN_S=$lt_LN_S

# What is the maximum length of a command?
max_cmd_len=$max_cmd_len

# Object file suffix (normally "o").
objext=$ac_objext

# Executable file suffix (normally "").
exeext=$exeext

# whether the shell understands "unset".
lt_unset=$lt_unset

# turn spaces into newlines.
SP2NL=$lt_lt_SP2NL

# turn newlines into spaces.
NL2SP=$lt_lt_NL2SP

# convert \$build file names to \$host format.
to_host_file_cmd=$lt_cv_to_host_file_cmd

# convert \$build files to toolchain format.
to_tool_file_cmd=$lt_cv_to_tool_file_cmd

# Method to check whether dependent libraries are shared objects.
deplibs_check_method=$lt_deplibs_check_method

# Command to use when deplibs_check_method = "file_magic".
file_magic_cmd=$lt_file_magic_cmd

# How to find potential files when deplibs_check_method = "file_magic".
file_magic_glob=$lt_file_magic_glob

# Find potential files using nocaseglob when deplibs_check_method = "file_magic".
want_nocaseglob=$lt_want_nocaseglob

# Command to associate shared and link libraries.
sharedlib_from_linklib_cmd=$lt_sharedlib_from_linklib_cmd

# The archiver.
AR=$lt_AR

# Flags to create an archive.
AR_FLAGS=$lt_AR_FLAGS

# How to feed a file listing to the archiver.
archiver_list_spec=$lt_archiver_list_spec

# A symbol stripping program.
STRIP=$lt_STRIP

# Commands used to install an old-style archive.
RANLIB=$lt_RANLIB
old_postinstall_cmds=$lt_old_postinstall_cmds
old_postuninstall_cmds=$lt_old_postuninstall_cmds

# Whether to use a lock for old archive extraction.
lock_old_archive_extraction=$lock_old_archive_extraction

# A C compiler.
LTCC=$lt_CC

# LTCC compiler flags.
LTCFLAGS=$lt_CFLAGS

# Take the output of nm and produce a listing of raw symbols and C names.
global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe

# Transform the output of nm in a proper C declaration.
global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl

# Transform the output of nm in a C name address pair.
global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address

# Transform the output of nm in a C name address pair when lib prefix is needed.
global_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix

# Specify filename containing input files for \$NM.
nm_file_list_spec=$lt_nm_file_list_spec

# The root where to search for dependent libraries,and in which our libraries should be installed.
lt_sysroot=$lt_sysroot

# The name of the directory that contains temporary libtool files.
objdir=$objdir

# Used to examine libraries when file_magic_cmd begins with "file".
MAGIC_CMD=$MAGIC_CMD

# Must we lock files when doing compilation?
need_locks=$lt_need_locks

# Manifest tool.
MANIFEST_TOOL=$lt_MANIFEST_TOOL

# Tool to manipulate archived DWARF debug symbol files on Mac OS X.
DSYMUTIL=$lt_DSYMUTIL

# Tool to change global to local symbols on Mac OS X.
NMEDIT=$lt_NMEDIT

# Tool to manipulate fat objects and archives on Mac OS X.
LIPO=$lt_LIPO

# ldd/readelf like tool for Mach-O binaries on Mac OS X.
OTOOL=$lt_OTOOL

# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.
OTOOL64=$lt_OTOOL64

# Old archive suffix (normally "a").
libext=$libext

# Shared library suffix (normally ".so").
shrext_cmds=$lt_shrext_cmds

# The commands to extract the exported symbol list from a shared archive.
extract_expsyms_cmds=$lt_extract_expsyms_cmds

# Variables whose values should be saved in libtool wrapper scripts and
# restored at link time.
variables_saved_for_relink=$lt_variables_saved_for_relink

# Do we need the "lib" prefix for modules?
need_lib_prefix=$need_lib_prefix

# Do we need a version for libraries?
need_version=$need_version

# Library versioning type.
version_type=$version_type

# Shared library runtime path variable.
runpath_var=$runpath_var

# Shared library path variable.
shlibpath_var=$shlibpath_var

# Is shlibpath searched before the hard-coded library search path?
shlibpath_overrides_runpath=$shlibpath_overrides_runpath

# Format of library name prefix.
libname_spec=$lt_libname_spec

# List of archive names.  First name is the real one, the rest are links.
# The last name is the one that the linker finds with -lNAME
library_names_spec=$lt_library_names_spec

# The coded name of the library, if different from the real name.
soname_spec=$lt_soname_spec

# Permission mode override for installation of shared libraries.
install_override_mode=$lt_install_override_mode

# Command to use after installation of a shared archive.
postinstall_cmds=$lt_postinstall_cmds

# Command to use after uninstallation of a shared archive.
postuninstall_cmds=$lt_postuninstall_cmds

# Commands used to finish a libtool library installation in a directory.
finish_cmds=$lt_finish_cmds

# As "finish_cmds", except a single script fragment to be evaled but
# not shown.
finish_eval=$lt_finish_eval

# Whether we should hardcode library paths into libraries.
hardcode_into_libs=$hardcode_into_libs

# Compile-time system search path for libraries.
sys_lib_search_path_spec=$lt_sys_lib_search_path_spec

# Run-time system search path for libraries.
sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec

# Whether dlopen is supported.
dlopen_support=$enable_dlopen

# Whether dlopen of programs is supported.
dlopen_self=$enable_dlopen_self

# Whether dlopen of statically linked programs is supported.
dlopen_self_static=$enable_dlopen_self_static

# Commands to strip libraries.
old_striplib=$lt_old_striplib
striplib=$lt_striplib


# The linker used to build libraries.
LD=$lt_LD

# How to create reloadable object files.
reload_flag=$lt_reload_flag
reload_cmds=$lt_reload_cmds

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds

# A language specific compiler.
CC=$lt_compiler

# Is the compiler the GNU compiler?
with_gcc=$GCC

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds
archive_expsym_cmds=$lt_archive_expsym_cmds

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds
module_expsym_cmds=$lt_module_expsym_cmds

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct

# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action

# ### END LIBTOOL CONFIG

_LT_EOF

  case $host_os in
  aix3*)
    cat <<\_LT_EOF >> "$cfgfile"
# AIX sometimes has problems with the GCC collect2 program.  For some
# reason, if we set the COLLECT_NAMES environment variable, the problems
# vanish in a puff of smoke.
if test "X${COLLECT_NAMES+set}" != Xset; then
  COLLECT_NAMES=
  export COLLECT_NAMES
fi
_LT_EOF
    ;;
  esac


ltmain="$ac_aux_dir/ltmain.sh"


  # We use sed instead of cat because bash on DJGPP gets confused if
  # if finds mixed CR/LF and LF-only lines.  Since sed operates in
  # text mode, it properly converts lines to CR/LF.  This bash problem
  # is reportedly fixed, but why not run on old versions too?
  sed '$q' "$ltmain" >> "$cfgfile" \
     || (rm -f "$cfgfile"; exit 1)

  if test x"$xsi_shell" = xyes; then
  sed -e '/^func_dirname ()$/,/^} # func_dirname /c\
func_dirname ()\
{\
\    case ${1} in\
\      */*) func_dirname_result="${1%/*}${2}" ;;\
\      *  ) func_dirname_result="${3}" ;;\
\    esac\
} # Extended-shell func_dirname implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_basename ()$/,/^} # func_basename /c\
func_basename ()\
{\
\    func_basename_result="${1##*/}"\
} # Extended-shell func_basename implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_dirname_and_basename ()$/,/^} # func_dirname_and_basename /c\
func_dirname_and_basename ()\
{\
\    case ${1} in\
\      */*) func_dirname_result="${1%/*}${2}" ;;\
\      *  ) func_dirname_result="${3}" ;;\
\    esac\
\    func_basename_result="${1##*/}"\
} # Extended-shell func_dirname_and_basename implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_stripname ()$/,/^} # func_stripname /c\
func_stripname ()\
{\
\    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\
\    # positional parameters, so assign one to ordinary parameter first.\
\    func_stripname_result=${3}\
\    func_stripname_result=${func_stripname_result#"${1}"}\
\    func_stripname_result=${func_stripname_result%"${2}"}\
} # Extended-shell func_stripname implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_split_long_opt ()$/,/^} # func_split_long_opt /c\
func_split_long_opt ()\
{\
\    func_split_long_opt_name=${1%%=*}\
\    func_split_long_opt_arg=${1#*=}\
} # Extended-shell func_split_long_opt implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_split_short_opt ()$/,/^} # func_split_short_opt /c\
func_split_short_opt ()\
{\
\    func_split_short_opt_arg=${1#??}\
\    func_split_short_opt_name=${1%"$func_split_short_opt_arg"}\
} # Extended-shell func_split_short_opt implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_lo2o ()$/,/^} # func_lo2o /c\
func_lo2o ()\
{\
\    case ${1} in\
\      *.lo) func_lo2o_result=${1%.lo}.${objext} ;;\
\      *)    func_lo2o_result=${1} ;;\
\    esac\
} # Extended-shell func_lo2o implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_xform ()$/,/^} # func_xform /c\
func_xform ()\
{\
    func_xform_result=${1%.*}.lo\
} # Extended-shell func_xform implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_arith ()$/,/^} # func_arith /c\
func_arith ()\
{\
    func_arith_result=$(( $* ))\
} # Extended-shell func_arith implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_len ()$/,/^} # func_len /c\
func_len ()\
{\
    func_len_result=${#1}\
} # Extended-shell func_len implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:

fi

if test x"$lt_shell_append" = xyes; then
  sed -e '/^func_append ()$/,/^} # func_append /c\
func_append ()\
{\
    eval "${1}+=\\${2}"\
} # Extended-shell func_append implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  sed -e '/^func_append_quoted ()$/,/^} # func_append_quoted /c\
func_append_quoted ()\
{\
\    func_quote_for_eval "${2}"\
\    eval "${1}+=\\\\ \\$func_quote_for_eval_result"\
} # Extended-shell func_append_quoted implementation' "$cfgfile" > $cfgfile.tmp \
  && mv -f "$cfgfile.tmp" "$cfgfile" \
    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
test 0 -eq $? || _lt_function_replace_fail=:


  # Save a `func_append' function call where possible by direct use of '+='
  sed -e 's%func_append \([a-zA-Z_]\{1,\}\) "%\1+="%g' $cfgfile > $cfgfile.tmp \
    && mv -f "$cfgfile.tmp" "$cfgfile" \
      || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
  test 0 -eq $? || _lt_function_replace_fail=:
else
  # Save a `func_append' function call even when '+=' is not available
  sed -e 's%func_append \([a-zA-Z_]\{1,\}\) "%\1="$\1%g' $cfgfile > $cfgfile.tmp \
    && mv -f "$cfgfile.tmp" "$cfgfile" \
      || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
  test 0 -eq $? || _lt_function_replace_fail=:
fi

if test x"$_lt_function_replace_fail" = x":"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Unable to substitute extended shell functions in $ofile" >&5
$as_echo "$as_me: WARNING: Unable to substitute extended shell functions in $ofile" >&2;}
fi


   mv -f "$cfgfile" "$ofile" ||
    (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
  chmod +x "$ofile"

 ;;
    "po-directories":C)
    for ac_file in $CONFIG_FILES; do
      # Support "outfile[:infile[:infile...]]"
      case "$ac_file" in
        *:*) ac_file=`echo "$ac_file"|sed 's%:.*%%'` ;;
      esac
      # PO directories have a Makefile.in generated from Makefile.in.in.
      case "$ac_file" in */Makefile.in)
        # Adjust a relative srcdir.
        ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
        ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
        ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
        # In autoconf-2.13 it is called $ac_given_srcdir.
        # In autoconf-2.50 it is called $srcdir.
        test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
        case "$ac_given_srcdir" in
          .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
          /*) top_srcdir="$ac_given_srcdir" ;;
          *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
        esac
        # Treat a directory as a PO directory if and only if it has a
        # POTFILES.in file. This allows packages to have multiple PO
        # directories under different names or in different locations.
        if test -f "$ac_given_srcdir/$ac_dir/POTFILES.in"; then
          rm -f "$ac_dir/POTFILES"
          test -n "$as_me" && echo "$as_me: creating $ac_dir/POTFILES" || echo "creating $ac_dir/POTFILES"
          cat "$ac_given_srcdir/$ac_dir/POTFILES.in" | sed -e "/^#/d" -e "/^[ 	]*\$/d" -e "s,.*,     $top_srcdir/& \\\\," | sed -e "\$s/\(.*\) \\\\/\1/" > "$ac_dir/POTFILES"
          POMAKEFILEDEPS="POTFILES.in"
          # ALL_LINGUAS, POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES depend
          # on $ac_dir but don't depend on user-specified configuration
          # parameters.
          if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
            # The LINGUAS file contains the set of available languages.
            if test -n "$OBSOLETE_ALL_LINGUAS"; then
              test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
            fi
            ALL_LINGUAS_=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
            # Hide the ALL_LINGUAS assigment from automake < 1.5.
            eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
            POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
          else
            # The set of available languages was given in configure.in.
            # Hide the ALL_LINGUAS assigment from automake < 1.5.
            eval 'ALL_LINGUAS''=$OBSOLETE_ALL_LINGUAS'
          fi
          # Compute POFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
          # Compute UPDATEPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
          # Compute DUMMYPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
          # Compute GMOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
          case "$ac_given_srcdir" in
            .) srcdirpre= ;;
            *) srcdirpre='$(srcdir)/' ;;
          esac
          POFILES=
          UPDATEPOFILES=
          DUMMYPOFILES=
          GMOFILES=
          for lang in $ALL_LINGUAS; do
            POFILES="$POFILES $srcdirpre$lang.po"
            UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
            DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
            GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
          done
          # CATALOGS depends on both $ac_dir and the user's LINGUAS
          # environment variable.
          INST_LINGUAS=
          if test -n "$ALL_LINGUAS"; then
            for presentlang in $ALL_LINGUAS; do
              useit=no
              if test "%UNSET%" != "$LINGUAS"; then
                desiredlanguages="$LINGUAS"
              else
                desiredlanguages="$ALL_LINGUAS"
              fi
              for desiredlang in $desiredlanguages; do
                # Use the presentlang catalog if desiredlang is
                #   a. equal to presentlang, or
                #   b. a variant of presentlang (because in this case,
                #      presentlang can be used as a fallback for messages
                #      which are not translated in the desiredlang catalog).
                case "$desiredlang" in
                  "$presentlang"*) useit=yes;;
                esac
              done
              if test $useit = yes; then
                INST_LINGUAS="$INST_LINGUAS $presentlang"
              fi
            done
          fi
          CATALOGS=
          if test -n "$INST_LINGUAS"; then
            for lang in $INST_LINGUAS; do
              CATALOGS="$CATALOGS $lang.gmo"
            done
          fi
          test -n "$as_me" && echo "$as_me: creating $ac_dir/Makefile" || echo "creating $ac_dir/Makefile"
          sed -e "/^POTFILES =/r $ac_dir/POTFILES" -e "/^# Makevars/r $ac_given_srcdir/$ac_dir/Makevars" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@POMAKEFILEDEPS@|$POMAKEFILEDEPS|g" "$ac_dir/Makefile.in" > "$ac_dir/Makefile"
          for f in "$ac_given_srcdir/$ac_dir"/Rules-*; do
            if test -f "$f"; then
              case "$f" in
                *.orig | *.bak | *~) ;;
                *) cat "$f" >> "$ac_dir/Makefile" ;;
              esac
            fi
          done
        fi
        ;;
      esac
    done ;;
    "run":F) chmod +x,-w run ;;

  esac
done # for ac_tag


as_fn_exit 0
